import librosa #line:1
import matplotlib .pyplot as plt #line:2
import librosa .display #line:3
import numpy as np #line:4
from create_base import *#line:5
from myDtw import *#line:6
from find_mismatch import *#line:7
def load_and_trim (O0O0O0O00OO000000 ):#line:11
    OO0O00OOOO000O00O ,O0O0OO0OOOO00O00O =librosa .load (O0O0O0O00OO000000 )#line:12
    OO0O0O0OOO0OO00OO =librosa .feature .rmse (OO0O00OOOO000O00O )#line:13
    OO0000000O0O0OO0O =np .nonzero (OO0O0O0OOO0OO00OO >=np .max (OO0O0O0OOO0OO00OO )/5 )#line:14
    OO0OOOOO0O0O0O00O =librosa .core .frames_to_samples (OO0000000O0O0OO0O )[1 ]#line:15
    OO0O00OOOO000O00O =OO0O00OOOO000O00O [OO0OOOOO0O0O0O00O [0 ]:OO0OOOOO0O0O0O00O [-1 ]]if OO0OOOOO0O0O0O00O .size else OO0O00OOOO000O00O [0 :0 ]#line:16
    return OO0O00OOOO000O00O ,O0O0OO0OOOO00O00O #line:18
def get_note_line_start_v2 (O0OOOO0OO00O00OO0 ,O00OOOO00OO0O000O ):#line:20
    O00OOOO00OO0O000O =O00OOOO00OO0O000O .replace (";",',')#line:21
    O00OOOO00OO0O000O =O00OOOO00OO0O000O .replace ("[",'')#line:22
    O00OOOO00OO0O000O =O00OOOO00OO0O000O .replace ("]",'')#line:23
    O00OOOO00OO0O000O =[OO00OO0O0OOO0O000 for OO00OO0O0OOO0O000 in O00OOOO00OO0O000O .split (',')]#line:24
    O000OO00O00O0O0OO =[OOOO0O0000O000O0O for OOOO0O0000O000O0O in range (len (O00OOOO00OO0O000O ))if O00OOOO00OO0O000O [OOOO0O0000O000O0O ]=='250']#line:25
    O00OOOO0OO0OO0OOO =4 #line:26
    OO000000OOO00OOOO =4 #line:27
    OO00O0OO00OO0OOOO =4 #line:28
    OO00OO0OO00O0O000 =4 #line:29
    if len (O000OO00O00O0O0OO )<1 :#line:30
        O00OOOO0OO0OO0OOO =10 #line:31
    else :#line:32
        OO0OO00O0O0000OO0 =[OOOOOO0O0OO000OO0 for OOOOOO0O0OO000OO0 in range (len (O000OO00O00O0O0OO ))if O000OO00O00O0O0OO [OOOOOO0O0OO000OO0 ]<=int (len (O00OOOO00OO0O000O )/3 )]#line:33
        OOOOOOO0O0OO00OOO =[OOOO000O00000OO00 for OOOO000O00000OO00 in range (len (O000OO00O00O0O0OO ))if O000OO00O00O0O0OO [OOOO000O00000OO00 ]>int (len (O00OOOO00OO0O000O )/3 )and O000OO00O00O0O0OO [OOOO000O00000OO00 ]<=int (len (O00OOOO00OO0O000O )*2 /3 )]#line:34
        OO00O00OOO0O0OOOO =[O0O00OOO0OOO0OOOO for O0O00OOO0OOO0OOOO in range (len (O000OO00O00O0O0OO ))if O000OO00O00O0O0OO [O0O00OOO0OOO0OOOO ]>int (len (O00OOOO00OO0O000O )*2 /3 )]#line:35
        if len (OO0OO00O0O0000OO0 )<1 :#line:36
            OO000000OOO00OOOO =10 #line:37
        if len (OOOOOOO0O0OO00OOO )<1 :#line:38
            OO00O0OO00OO0OOOO =10 #line:39
        if len (OO00O00OOO0O0OOOO )<1 :#line:40
            OO00OO0OO00O0O000 =10 #line:41
    OOO00O0OOOOOOOOOO =np .min (O0OOOO0OO00O00OO0 )#line:42
    O000OOO000000O00O =np .max (O0OOOO0OO00O00OO0 )#line:43
    OOO0OOO0000OOOO0O ,OOO000OOO0OO0O0OO =O0OOOO0OO00O00OO0 .shape #line:44
    O000OO00O000OOO0O =[]#line:45
    OO0OOO0O00O0O0000 =[]#line:46
    O0OOO0O000OO00000 =[]#line:47
    O0000000OO00O00OO =[]#line:48
    OOOO0000O000OOO00 ,OO000OO00O000OOO0 ,OOOO0O0O00OOOOOO0 =0 ,0 ,0 #line:49
    O0OOO000OO000O0OO =0 #line:50
    O0O000O00OO0OO0OO =10 #line:51
    for OOO0O0OO0O000O000 in range (10 ,45 ):#line:52
        if np .max (O0OOOO0OO00O00OO0 [OOO0O0OO0O000O000 ,:])==OOO00O0OOOOOOOOOO :#line:53
            O0O000O00OO0OO0OO =OOO0O0OO0O000O000 #line:54
            break #line:55
    print ("best_col is {}".format (O0O000O00OO0OO0OO ))#line:56
    for OOO0O0OO0O000O000 in range (O0O000O00OO0OO0OO ,OOO000OOO0OO0O0OO -10 ):#line:57
        OO0OOOOOOO0O0O0O0 =O0OOOO0OO00O00OO0 [10 :,OOO0O0OO0O000O000 ]#line:58
        if np .max (OO0OOOOOOO0O0O0O0 )==O000OOO000000O00O and OOO0O0OO0O000O000 >=O0OOO000OO000O0OO :#line:60
            OO00000OOOOOOOO00 =True #line:61
            O0OO0O00O0OOOO000 =5 #line:62
            while OO00000OOOOOOOO00 :#line:63
                O000O00O0OO000000 =O0OOOO0OO00O00OO0 [10 :,OOO0O0OO0O000O000 :OOO0O0OO0O000O000 +O0OO0O00O0OOOO000 ]#line:64
                OOOO0000O000OOO00 ,OO000OO00O000OOO0 ,OOOO0O0O00OOOOOO0 =get_longest_for_cols_cqt (O000O00O0OO000000 ,OOO00O0OOOOOOOOOO )#line:65
                if OO000OO00O000OOO0 +OOOO0000O000OOO00 ==O0OO0O00O0OOOO000 :#line:66
                    O0OO0O00O0OOOO000 +=1 #line:67
                else :#line:68
                    OO00000OOOOOOOO00 =False #line:69
                    if OOO0O0OO0O000O000 <=int (OOO000OOO0OO0O0OO /3 ):#line:70
                        O00OOOO0OO0OO0OOO =OO000000OOO00OOOO #line:71
                    elif OOO0O0OO0O000O000 >int (OOO000OOO0OO0O0OO /3 )and OOO0O0OO0O000O000 <=int (OOO000OOO0OO0O0OO *2 /3 ):#line:72
                        O00OOOO0OO0OO0OOO =OO00O0OO00OO0OOOO #line:73
                    else :#line:74
                        O00OOOO0OO0OO0OOO =OO00OO0OO00O0O000 #line:75
                    if OOOO0000O000OOO00 >O00OOOO0OO0OO0OOO :#line:77
                        O000OO00O000OOO0O .append (OOO0O0OO0O000O000 +OO000OO00O000OOO0 )#line:78
                        O0OOO000OO000O0OO =OOO0O0OO0O000O000 +OO000OO00O000OOO0 +OOOO0000O000OOO00 #line:79
                        OO0OOO0O00O0O0000 .append (O0OOO000OO000O0OO )#line:80
                        O0OOO0O000OO00000 .append (OOOO0O0O00OOOOOO0 )#line:81
                        O0000000OO00O00OO .append (OOOO0000O000OOO00 )#line:82
    return O000OO00O000OOO0O ,OO0OOO0O00O0O0000 ,O0000000OO00O00OO ,O0OOO0O000OO00000 #line:83
def merge_note_line (O0000OO00O0OOO0OO ,OOO0O0OO000000O00 ,O0OO0OO0OOO0O0000 ,O0O0OOOO0OOOOO000 ):#line:85
    O0O00O00OOO0O000O =[]#line:86
    O0O0O00O0O0O00OOO =[]#line:87
    O00OOO00O00O000O0 =[]#line:88
    O000000000000OO00 =[]#line:89
    O0O0000OO0OOO00O0 =0 #line:90
    while O0O0000OO0OOO00O0 <=len (O0000OO00O0OOO0OO )-2 :#line:91
        if O0000OO00O0OOO0OO [O0O0000OO0OOO00O0 ]+O0OO0OO0OOO0O0000 [O0O0000OO0OOO00O0 ]==O0000OO00O0OOO0OO [O0O0000OO0OOO00O0 +1 ]and (O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 ]==O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 +1 ]or np .abs (O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 ]-O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 +1 ])>=10 or np .abs (O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 ]-O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 +1 ])<=2 ):#line:92
            O0O00O00OOO0O000O .append (O0000OO00O0OOO0OO [O0O0000OO0OOO00O0 ])#line:93
            O0O0O00O0O0O00OOO .append (OOO0O0OO000000O00 [O0O0000OO0OOO00O0 +1 ])#line:94
            O00OOO00O00O000O0 .append (O0OO0OO0OOO0O0000 [O0O0000OO0OOO00O0 ]+O0OO0OO0OOO0O0000 [O0O0000OO0OOO00O0 +1 ])#line:95
            O000000000000OO00 .append (O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 ])#line:96
            O0O0000OO0OOO00O0 +=2 #line:97
        else :#line:98
            O0O00O00OOO0O000O .append (O0000OO00O0OOO0OO [O0O0000OO0OOO00O0 ])#line:99
            O0O0O00O0O0O00OOO .append (OOO0O0OO000000O00 [O0O0000OO0OOO00O0 ])#line:100
            O00OOO00O00O000O0 .append (O0OO0OO0OOO0O0000 [O0O0000OO0OOO00O0 ])#line:101
            O000000000000OO00 .append (O0O0OOOO0OOOOO000 [O0O0000OO0OOO00O0 ])#line:102
            O0O0000OO0OOO00O0 +=1 #line:103
    return O0O00O00OOO0O000O ,O0O0O00O0O0O00OOO ,O00OOO00O00O000O0 ,O000000000000OO00 #line:104
def merge_note_line_by_distance (O000000000O0OO00O ,OOO0000O0OOO000OO ,OO0O0O0OO0OO0000O ,OO000OOOOOOOOO00O ,O0OOO00OO0OO00000 ):#line:106
    OOO0OO0000OOO000O =0 #line:107
    OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace (";",',')#line:108
    OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace ("[",'')#line:109
    OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace ("]",'')#line:110
    if OO000OOOOOOOOO00O .find ("(")>=0 :#line:111
        OO00000O0OO00OO00 =[O0O0OOO0OO00OO000 for O0O0OOO0OO00OO000 in OO000OOOOOOOOO00O .split (',')]#line:112
        for OOOO0OO000OOOO000 in range (len (OO00000O0OO00OO00 )):#line:113
            if OO00000O0OO00OO00 [OOOO0OO000OOOO000 ].find ("(")>=0 :#line:114
                OOO0OO0000OOO000O =OOOO0OO000OOOO000 #line:115
                break #line:116
        OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace ("(",'')#line:117
        OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace (")",'')#line:118
        OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace ("-",'')#line:119
        OO000OOOOOOOOO00O =OO000OOOOOOOOO00O .replace ("--",'')#line:120
    OO000OOOOOOOOO00O =[OOOO0OO0O00000OO0 for OOOO0OO0O00000OO0 in OO000OOOOOOOOO00O .split (',')]#line:121
    OO000OOOOOOOOO00O =[int (O000O0000O0O00OOO )for O000O0000O0O00OOO in OO000OOOOOOOOO00O ]#line:122
    if OOO0OO0000OOO000O >0 :#line:123
        OO000OOOOOOOOO00O [OOO0OO0000OOO000O -1 ]+=OO000OOOOOOOOO00O [OOO0OO0000OOO000O ]#line:124
        del OO000OOOOOOOOO00O [OOO0OO0000OOO000O ]#line:125
    O00O0OO00O00OOOOO =np .sum (OO000OOOOOOOOO00O )#line:127
    O00OO0O0OOOOOOO00 =np .min (OO000OOOOOOOOO00O )#line:128
    O00O0OO00O00O0O0O =int (O0OOO00OO0OO00000 *O00OO0O0OOOOOOO00 /O00O0OO00O00OOOOO )#line:129
    O000O0OO00O0000O0 =[OOOO00O000O0OOO0O for OOOO00O000O0OOO0O in range (len (OO000OOOOOOOOO00O ))if OO000OOOOOOOOO00O [OOOO00O000O0OOO0O ]==O00OO0O0OOOOOOO00 ]#line:130
    OO00OOOOO0OO0OO00 =[OO0000O00O00OOOO0 for OO0000O00O00OOOO0 in range (len (O000O0OO00O0000O0 ))if O000O0OO00O0000O0 [OO0000O00O00OOOO0 ]<int (len (OO000OOOOOOOOO00O )/2 )]#line:131
    OO00OOO00OOOOO00O =[OO0OOOOO0OOO00OOO for OO0OOOOO0OOO00OOO in range (len (O000O0OO00O0000O0 ))if O000O0OO00O0000O0 [OO0OOOOO0OOO00OOO ]>int (len (OO000OOOOOOOOO00O )/2 )]#line:132
    OO0OOO0000000O0OO =int (O00O0OO00O00O0O0O *0.5 )#line:133
    O0OOOOO0000OOOOOO =int (2 *O00O0OO00O00O0O0O *0.5 )#line:134
    O0OOO0OO000O00OO0 =int (2 *O00O0OO00O00O0O0O *0.5 )#line:135
    O0OO00O00O000OO00 =OO0OOO0000000O0OO #line:136
    OOO000O0OO0O000OO =np .median (OOO0000O0OOO000OO )#line:137
    if len (OO00OOOOO0OO0OO00 )>0 :#line:138
        O0OOOOO0000OOOOOO =OO0OOO0000000O0OO #line:139
    if len (OO00OOO00OOOOO00O )>0 :#line:141
        O0OOO0OO000O00OO0 =OO0OOO0000000O0OO #line:142
    O00O0O000OOO00O00 =[]#line:144
    O0O0O0O0OOO00OOO0 =[]#line:145
    OO00O00OO0OOOO0O0 =[]#line:146
    O00O0O000OOO00O00 .append (O000000000O0OO00O [0 ])#line:147
    O0O0O0O0OOO00OOO0 .append (OOO0000O0OOO000OO [0 ])#line:148
    OO00O00OO0OOOO0O0 .append (OO0O0O0OO0OO0000O [0 ])#line:149
    for OOOO0OO000OOOO000 in range (1 ,len (O000000000O0OO00O )):#line:151
        if O000000000O0OO00O [OOOO0OO000OOOO000 ]<=O000000000O0OO00O [0 ]+0.5 *O0OOO00OO0OO00000 :#line:153
            OO0OOO0000000O0OO =O0OOOOO0000OOOOOO #line:154
        else :#line:155
            OO0OOO0000000O0OO =O0OOO0OO000O00OO0 #line:156
        if O000000000O0OO00O [OOOO0OO000OOOO000 ]-O00O0O000OOO00O00 [-1 ]>OO0OOO0000000O0OO and (OOO0000O0OOO000OO [OOOO0OO000OOOO000 ]>O0OO00O00O000OO00 and OOO0000O0OOO000OO [OOOO0OO000OOOO000 ]>OOO000O0OO0O000OO /4 or np .abs (OO0O0O0OO0OO0000O [OOOO0OO000OOOO000 ]-OO0O0O0OO0OO0000O [OOOO0OO000OOOO000 -1 ])<2 ):#line:157
            O00O0O000OOO00O00 .append (O000000000O0OO00O [OOOO0OO000OOOO000 ])#line:158
            O0O0O0O0OOO00OOO0 .append (OOO0000O0OOO000OO [OOOO0OO000OOOO000 ])#line:159
            OO00O00OO0OOOO0O0 .append (OO0O0O0OO0OO0000O [OOOO0OO000OOOO000 ])#line:160
    return O00O0O000OOO00O00 ,O0O0O0O0OOO00OOO0 ,OO00O00OO0OOOO0O0 #line:161
def del_false_same (OOOO0OOOOO0OOO00O ,OOO00O0O000O0000O ,OOO000O00OOOO0OOO ,OOO0OOOOOOOOO0OO0 ,O0O00OOO0O0OO000O ):#line:164
    OO0O0O0OO0OO000OO =[OOO00O0O000O0000O [0 ]]#line:165
    OOO0OOOOO00O0OO00 =[OOO000O00OOOO0OOO [0 ]]#line:166
    OO00O00O0OO0O0000 =[OOO0OOOOOOOOO0OO0 [0 ]]#line:167
    O0OO0O0O0OO0000O0 =get_the_index_of_same (OOOO0OOOOO0OOO00O )#line:168
    if len (O0OO0O0O0OO0000O0 )==0 :#line:169
        for O00O00000O0O0OO0O in range (1 ,len (OOO000O00OOOO0OOO )):#line:170
            if OOO000O00OOOO0OOO [O00O00000O0O0OO0O ]!=OOO000O00OOOO0OOO [O00O00000O0O0OO0O -1 ]:#line:171
                OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:172
                OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:173
                OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:174
            else :#line:175
                if OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O -1 ]<OOO00O0O000O0000O [O00O00000O0O0OO0O ]-OOO00O0O000O0000O [O00O00000O0O0OO0O -1 ]:#line:176
                    OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:177
                    OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:178
                    OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:179
                if OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O -1 ]==OOO00O0O000O0000O [O00O00000O0O0OO0O ]-OOO00O0O000O0000O [O00O00000O0O0OO0O -1 ]:#line:180
                    if not O0O00OOO0O0OO000O .get (OOO00O0O000O0000O [O00O00000O0O0OO0O ])is None and O0O00OOO0O0OO000O .get (OOO00O0O000O0000O [O00O00000O0O0OO0O ])>1.75 :#line:181
                        OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:182
                        OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:183
                        OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:184
                    else :#line:185
                        OO00O00O0OO0O0000 [-1 ]=OO00O00O0OO0O0000 [-1 ]+OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ]#line:186
    else :#line:187
        for O00O00000O0O0OO0O in range (1 ,len (OOO000O00OOOO0OOO )):#line:188
            if OOO000O00OOOO0OOO [O00O00000O0O0OO0O ]!=OOO000O00OOOO0OOO [O00O00000O0O0OO0O -1 ]:#line:189
                OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:190
                OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:191
                OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:192
            else :#line:193
                if OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O -1 ]<OOO00O0O000O0000O [O00O00000O0O0OO0O ]-OOO00O0O000O0000O [O00O00000O0O0OO0O -1 ]:#line:194
                    OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:195
                    OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:196
                    OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:197
                if OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O -1 ]==OOO00O0O000O0000O [O00O00000O0O0OO0O ]-OOO00O0O000O0000O [O00O00000O0O0OO0O -1 ]:#line:198
                    O0O0OOO000O0O0O00 =[np .abs (O00O00000O0O0OO0O -OO0O0O000O000O000 )for OO0O0O000O000O000 in O0OO0O0O0OO0000O0 ]#line:199
                    if np .min (O0O0OOO000O0O0O00 )<=3 :#line:200
                        OO0O0O0OO0OO000OO .append (OOO00O0O000O0000O [O00O00000O0O0OO0O ])#line:201
                        OOO0OOOOO00O0OO00 .append (OOO000O00OOOO0OOO [O00O00000O0O0OO0O ])#line:202
                        OO00O00O0OO0O0000 .append (OOO0OOOOOOOOO0OO0 [O00O00000O0O0OO0O ])#line:203
    return OO0O0O0OO0OO000OO ,OOO0OOOOO00O0OO00 ,OO00O00O0OO0O0000 #line:206
def get_the_index_of_same (OO0OO00OO0O0O0O0O ):#line:208
    OO0OOO0000O00O0O0 =[]#line:209
    for O000000OOO00O00OO in range (1 ,len (OO0OO00OO0O0O0O0O )):#line:210
        if OO0OO00OO0O0O0O0O [O000000OOO00O00OO ]==OO0OO00OO0O0O0O0O [O000000OOO00O00OO -1 ]:#line:211
            OO0OOO0000O00O0O0 .append (O000000OOO00O00OO )#line:212
    return OO0OOO0000O00O0O0 #line:213
def get_longest_for_cols_cqt (OOO0OO00OOO000O0O ,O0000000OOOO0OO00 ):#line:215
    OOO00OOO0OO000O00 ,O0O0O000OOO0OO0OO =OOO0OO00OOO000O0O .shape #line:216
    OO0OOO0OO0O00000O ,OOOO0O0O00000OO00 ,OO00OOOOO0OO0000O =0 ,0 ,0 #line:217
    for O00O00OO0O0OO00O0 in range (10 ,OOO00OOO0OO000O00 -10 ):#line:218
        OOOO00O00OO00O000 =OOO0OO00OOO000O0O [O00O00OO0O0OO00O0 ]#line:219
        OOOO00O00OO00O000 =[1 if OOOO00O00OO00O000 [OO0OOO0O0O00OO00O ]>O0000000OOOO0OO00 else 0 for OO0OOO0O0O00OO00O in range (len (OOOO00O00OO00O000 ))]#line:220
        O0O00OO0O0000O0O0 ,O000OOOO0O0000OO0 =getLongestLine (OOOO00O00OO00O000 )#line:221
        if O0O00OO0O0000O0O0 >OO0OOO0OO0O00000O :#line:222
            OO0OOO0OO0O00000O =O0O00OO0O0000O0O0 #line:223
            OOOO0O0O00000OO00 =O000OOOO0O0000OO0 #line:224
            OO00OOOOO0OO0000O =O00O00OO0O0OO00O0 #line:225
    return OO0OOO0OO0O00000O ,OOOO0O0O00000OO00 ,OO00OOOOO0OO0000O #line:227
def get_note_line_start (O0O00OO00OOOO0000 ):#line:229
    OOO000O000OOOO0O0 =[]#line:230
    OOO00O0O0OOO00OO0 =[]#line:231
    OO000000O00000OO0 ,OO0OOOOOO00000OO0 =O0O00OO00OOOO0000 .shape #line:232
    O0O00OO0OO0OO0OOO =np .max (O0O00OO00OOOO0000 )#line:233
    O00O00OOO0OOO00OO =np .min (O0O00OO00OOOO0000 )#line:234
    OOO0000O00O0O000O =0 #line:235
    for OO00O0O00OOO0OOO0 in range (5 ,OO0OOOOOO00000OO0 -15 ):#line:236
        if np .max (O0O00OO00OOOO0000 [:,OO00O0O00OOO0OOO0 ])==O0O00OO0OO0OO0OOO and OO00O0O00OOO0OOO0 >OOO0000O00O0O000O :#line:238
            O0OO0O00000000OOO =O0O00OO00OOOO0000 [:,OO00O0O00OOO0OOO0 :]#line:239
            for OO000O000O00O0OOO in range (OO000000O00000OO0 -20 ,10 ,-1 ):#line:241
                OO00O0000OO0OO0O0 =O0OO0O00000000OOO [OO000O000O00O0OOO ]#line:242
                if np .min (OO00O0000OO0OO0O0 [0 :8 ])==O0O00OO0OO0OO0OOO :#line:244
                    O0O000000O00O000O =O0O00OO00OOOO0000 [OO000O000O00O0OOO +10 :OO000O000O00O0OOO +20 ,OO00O0O00OOO0OOO0 :OO00O0O00OOO0OOO0 +10 ]#line:246
                    OOO00OO00OOOO00OO =np .zeros (O0O000000O00O000O .shape )#line:247
                    if OO000O000O00O0OOO -20 >0 :#line:248
                        OOO00OO00OOOO00OO =O0O00OO00OOOO0000 [OO000O000O00O0OOO -20 :OO000O000O00O0OOO -10 ,OO00O0O00OOO0OOO0 :OO00O0O00OOO0OOO0 +10 ]#line:249
                    OO00OOOOO000OO000 =OO000O000O00O0OOO -6 if OO000O000O00O0OOO -6 >0 else 0 #line:250
                    O0000000O00OO0O0O =OO000O000O00O0OOO +6 if OO000O000O00O0OOO +6 <OO000000O00000OO0 else OO000000O00000OO0 #line:251
                    O0O0O000OOO00OOO0 =O0O00OO00OOOO0000 [OO00OOOOO000OO000 :O0000000O00OO0O0O ,OO00O0O00OOO0OOO0 :OO00O0O00OOO0OOO0 +10 ]#line:252
                    OO0OOO0O0O00O0O00 =False #line:253
                    O0OO0OOO000OOO0OO =False #line:254
                    for O00OOO0000OO00OO0 in range (0 ,int ((O0000000O00OO0O0O -OO00OOOOO000OO000 -1 )/2 )):#line:255
                        if np .max (O0O0O000OOO00OOO0 [O00OOO0000OO00OO0 ])==O00O00OOO0OOO00OO :#line:256
                            OO0OOO0O0O00O0O00 =True #line:257
                            break #line:258
                    for O00OOO0000OO00OO0 in range (O0000000O00OO0O0O -OO00OOOOO000OO000 -1 ,int ((O0000000O00OO0O0O -OO00OOOOO000OO000 -1 )/2 ),-1 ):#line:259
                        if np .max (O0O0O000OOO00OOO0 [O00OOO0000OO00OO0 ])==O00O00OOO0OOO00OO :#line:260
                            O0OO0OOO000OOO0OO =True #line:261
                            break #line:262
                    if OO0OOO0O0O00O0O00 and O0OO0OOO000OOO0OO and (np .max (O0O000000O00O000O )==O0O00OO0OO0OO0OOO or np .max (OOO00OO00OOOO00OO )==O0O00OO0OO0OO0OOO ):#line:265
                        if len (OOO000O000OOOO0O0 )==0 :#line:266
                            OOO000O000OOOO0O0 .append (OO00O0O00OOO0OOO0 )#line:267
                        else :#line:269
                            O000O000O00OO0OOO =[np .abs (O000OOOOO0OO0000O -OO00O0O00OOO0OOO0 )for O000OOOOO0OO0000O in OOO000O000OOOO0O0 ]#line:270
                            if np .min (O000O000O00OO0OOO )>10 :#line:271
                                OOO000O000OOOO0O0 .append (OO00O0O00OOO0OOO0 )#line:272
                        O0OOOOOOOO0000O0O =0 #line:274
                        for O0OOO00O0OOOOO00O in range (OO000O000O00O0OOO -10 ,OO000O000O00O0OOO ):#line:276
                            OO00OOO0O00000000 =O0OO0O00000000OOO [O0OOO00O0OOOOO00O ]#line:277
                            OOOO0000O00OOOO00 =[O00O00O0O00OO0OOO for O00O00O0O00OO0OOO in range (len (OO00OOO0O00000000 ))if OO00OOO0O00000000 [O00O00O0O00OO0OOO ]==O00O00OOO0OOO00OO ]#line:279
                            OOO0O000000OO000O =0 #line:280
                            if len (OOOO0000O00OOOO00 )>0 :#line:281
                                OOO0O000000OO000O =OOOO0000O00OOOO00 [0 ]#line:282
                            OOO0000O00O0O000O =OO00O0O00OOO0OOO0 +OOO0O000000OO000O #line:283
                            if OOO0000O00O0O000O >O0OOOOOOOO0000O0O :#line:284
                                O0OOOOOOOO0000O0O =OOO0000O00O0O000O #line:285
                        OOO00O0O0OOO00OO0 .append (O0OOOOOOOO0000O0O )#line:286
                        O0OO0OOO000OOO0OO =False #line:287
                        OO0OOO0O0O00O0O00 =False #line:288
                        break #line:289
    return OOO000O000OOOO0O0 ,OOO00O0O0OOO00OO0 #line:290
def get_note_lines (OOOOO00O00OO00O00 ,OO00O00O000000OO0 ):#line:292
    OO0OOO000O00OOOOO =[]#line:293
    OO00O0O00O0OOOO00 ,O00O000000O00O0O0 =OOOOO00O00OO00O00 .shape #line:294
    OOOOOO0OO0O0OO00O =np .max (OOOOO00O00OO00O00 )#line:295
    OO0O0O0O00O0O00OO =np .min (OOOOO00O00OO00O00 )#line:296
    O0OO0O0OOO0O00OOO =[]#line:297
    OO00O000OO0000O00 =[]#line:298
    for OOO0OO0O0O0OO00O0 in range (len (OO00O00O000000OO0 )):#line:299
        OOO0OOOOO0OO00OO0 =OO00O00O000000OO0 [OOO0OO0O0O0OO00O0 ]#line:300
        if OOO0OO0O0O0OO00O0 <len (OO00O00O000000OO0 )-1 :#line:301
            O0O0OOOOOOOOO0O00 =OO00O00O000000OO0 [OOO0OO0O0O0OO00O0 +1 ]#line:302
        else :#line:303
            O0O0OOOOOOOOO0O00 =O00O000000O00O0O0 -10 #line:304
        OO00O0O00O0OO0O00 =OOOOO00O00OO00O00 [:,OOO0OOOOO0OO00OO0 :O0O0OOOOOOOOO0O00 ]#line:305
        O00OOO0O0OOO0OO00 ,OOOOO0O00O0O000O0 =get_longest_note_line (OO00O0O00O0OO0O00 )#line:306
        OO0OOO000O00OOOOO .append (O00OOO0O0OOO0OO00 )#line:332
        OO00O000OO0000O00 .append (OOOOO0O00O0O000O0 )#line:333
        O0OO0O0OOO0O00OOO .append (OOO0OOOOO0OO00OO0 )#line:334
    return O0OO0O0OOO0O00OOO ,OO0OOO000O00OOOOO ,OO00O000OO0000O00 #line:335
def check_more_note_line (OO0OO00OO000OO00O ,O00OOOO0000000000 ,O000O00O0OO000OO0 ):#line:337
    O0O0OOO0OOOO000O0 ,OO0OO0OOOO00O0OO0 =OO0OO00OO000OO00O .shape #line:338
    O0OOOO00000OO0000 =0 #line:341
    O0000OOO0OOOOO000 =0 #line:342
    OOOO0O0O0OOOO0OO0 =0 #line:343
    if OO0OO0OOOO00O0OO0 >0 :#line:344
        OO0O0OOO00OOOO000 =np .min (OO0OO00OO000OO00O )#line:345
        for OOO00O0OO000O0O0O in range (O00OOOO0000000000 -1 ,O00OOOO0000000000 -10 ,-1 ):#line:347
            O0OO00OOOO00O0OO0 =OO0OO00OO000OO00O [OOO00O0OO000O0O0O ]#line:348
            O0OO00OOOO00O0OO0 =[1 if O0OO00OOOO00O0OO0 [OOOO0OOOO00OO00O0 ]>OO0O0OOO00OOOO000 else 0 for OOOO0OOOO00OO00O0 in range (len (O0OO00OOOO00O0OO0 ))]#line:349
            OO000OO00OO00O0O0 ,O0O00OOOOO0OO0O0O =getLongestLine (O0OO00OOOO00O0OO0 )#line:350
            if OO000OO00OO00O0O0 >O000O00O0OO000OO0 or (OO000OO00OO00O0O0 ==O000O00O0OO000OO0 and OOO00O0OO000O0O0O <O00OOOO0000000000 -1 ):#line:351
                O0OOOO00000OO0000 =OO000OO00OO00O0O0 #line:352
                O0000OOO0OOOOO000 =OOO00O0OO000O0O0O #line:353
                OOOO0O0O0OOOO0OO0 =O0O00OOOOO0OO0O0O #line:354
        O0000OOOO00O0OO00 =O0000OOO0OOOOO000 #line:355
        OOO00OOOO0OO0O000 =O0OOOO00000OO0000 #line:356
        O0OO00OOOO0OO0OO0 =OOOO0O0O0OOOO0OO0 #line:357
        O0OOOO00000OO0000 =0 #line:360
        O0000OOO0OOOOO000 =0 #line:361
        OOOO0O0O0OOOO0OO0 =0 #line:362
        for OOO00O0OO000O0O0O in range (O00OOOO0000000000 +1 ,O00OOOO0000000000 +10 ):#line:363
            O0OO00OOOO00O0OO0 =OO0OO00OO000OO00O [OOO00O0OO000O0O0O ]#line:364
            O0OO00OOOO00O0OO0 =[1 if O0OO00OOOO00O0OO0 [OO0O0O000000OO000 ]>OO0O0OOO00OOOO000 else 0 for OO0O0O000000OO000 in range (len (O0OO00OOOO00O0OO0 ))]#line:365
            OO000OO00OO00O0O0 ,O0O00OOOOO0OO0O0O =getLongestLine (O0OO00OOOO00O0OO0 )#line:366
            if OO000OO00OO00O0O0 >O000O00O0OO000OO0 or (OO000OO00OO00O0O0 ==O000O00O0OO000OO0 and OOO00O0OO000O0O0O >O00OOOO0000000000 +1 ):#line:367
                O0OOOO00000OO0000 =OO000OO00OO00O0O0 #line:368
                O0000OOO0OOOOO000 =OOO00O0OO000O0O0O #line:369
                OOOO0O0O0OOOO0OO0 =O0O00OOOOO0OO0O0O #line:370
        O0OO00O0O0O00O000 =O0000OOO0OOOOO000 #line:371
        O0OOOO0O0O0O0O00O =O0OOOO00000OO0000 #line:372
        O0O0O00O000OO00OO =OOOO0O0O0OOOO0OO0 #line:373
        if (O000O00O0OO000OO0 -OOO00OOOO0OO0O000 -O0OOOO0O0O0O0O00O )<3 :#line:375
            return True ,O0OO00OOOO0OO0OO0 ,O0000OOOO00O0OO00 ,OOO00OOOO0OO0O000 ,O0O0O00O000OO00OO ,O0OO00O0O0O00O000 ,O0OOOO0O0O0O0O00O #line:376
        else :#line:377
            return False ,O0OO00OOOO0OO0OO0 ,O0000OOOO00O0OO00 ,OOO00OOOO0OO0O000 ,O0O0O00O000OO00OO ,O0OO00O0O0O00O000 ,O0OOOO0O0O0O0O00O #line:378
def modify_some_note_line (OO0O0OO0O00O0OO00 ,O0OO0OO0O0000OO0O ,O0O00O0000O000O00 ):#line:380
    OOOOO000O0OOOO0OO =0 #line:381
    O0OOO00OO00O00O0O ,OO000OOOOOOO0O00O =OO0O0OO0O00O0OO00 .shape #line:382
    OOO00O000O0O00O00 =np .max (OO0O0OO0O00O0OO00 )#line:383
    OOOOO0OOOOO0O000O =np .min (OO0O0OO0O00O0OO00 )#line:384
    OOO00O000OOOO000O =O0OO0OO0O0000OO0O #line:386
    O0O0O00OO0OOOO000 =OO0O0OO0O00O0OO00 [:,OOO00O000OOOO000O :OOO00O000OOOO000O +15 ]#line:387
    for O0OO0OO0O00OOOO0O in range (O0O00O0000O000O00 ,O0OOO00OO00O00O0O -10 ):#line:389
        O0O00OOO0O0O0OOO0 =O0O0O00OO0OOOO000 [O0OO0OO0O00OOOO0O ]#line:390
        OO00O0O0OOO00OO0O =np .sum (O0O00OOO0O0O0OOO0 ==OOO00O000O0O00O00 )#line:392
        O0O0000O0OO000O00 =np .sum (O0O00OOO0O0O0OOO0 ==OOOOO0OOOOO0O000O )#line:393
        if OO00O0O0OOO00OO0O >O0O0000O0OO000O00 and np .sum (O0O0O00OO0OOOO000 [O0OO0OO0O00OOOO0O -1 ]==OOOOO0OOOOO0O000O )>O0O0000O0OO000O00 :#line:394
            OOOOO000O0OOOO0OO =O0OO0OO0O00OOOO0O #line:395
            print ("x,j is {},{}".format (OOO00O000OOOO000O ,O0OO0OO0O00OOOO0O ))#line:396
            break #line:397
    return OOOOO000O0OOOO0OO #line:398
def check_all_note_lines (O0OOO00000O000O0O ,OO0O0OOO00000O0OO ,O000O00O00O0OO000 ):#line:400
    O00O0OO0O0000OOOO =np .median (OO0O0OOO00000O0OO )#line:401
    print ("note_lines_median is {}".format (O00O0OO0O0000OOOO ))#line:402
    O0OOOO00O0000OOO0 =[]#line:403
    O00O0O0OOOO0O0000 =O00O0OO0O0000OOOO #line:404
    for O0OOO0O0OO0OOOOO0 in range (len (OO0O0OOO00000O0OO )):#line:405
        O0OOO000OO0O00000 =OO0O0OOO00000O0OO [O0OOO0O0OO0OOOOO0 ]#line:406
        O0000O00OO00O000O =O0OOO00000O000O0O [O0OOO0O0OO0OOOOO0 ]#line:407
        if np .abs (O0OOO000OO0O00000 -O00O0OO0O0000OOOO )>10 :#line:408
            OO0OOO00OOO00OO00 =O0OOO000OO0O00000 +1 #line:409
            OO00O0O00OO00O0O0 =modify_some_note_line (O000O00O00O0OO000 ,O0000O00OO00O000O ,OO0OOO00OOO00OO00 )#line:410
            if np .abs (OO00O0O00OO00O0O0 -O00O0OO0O0000OOOO )>8 :#line:411
                OO00O0O00OO00O0O0 =int (O00O0OO0O0000OOOO )#line:412
            O0OOOO00O0000OOO0 .append (OO00O0O00OO00O0O0 )#line:413
        elif O0OOO000OO0O00000 -O00O0O0OOOO0O0000 >8 :#line:414
            O0OOOO00O0000OOO0 .append (O0OOO000OO0O00000 -12 )#line:415
        elif O00O0O0OOOO0O0000 -O0OOO000OO0O00000 >8 :#line:416
            O0OOOO00O0000OOO0 .append (O0OOO000OO0O00000 +12 )#line:417
        else :#line:418
            O0OOOO00O0000OOO0 .append (O0OOO000OO0O00000 )#line:419
        O00O0O0OOOO0O0000 =O0OOOO00O0000OOO0 [-1 ]#line:420
    return O0OOOO00O0000OOO0 #line:421
def del_false_note_lines (OOO0O000OO00OO000 ,O000OOO0OOOO0O000 ,OOOO0O00OO000O00O ,O000000O000OOOOO0 ):#line:423
    OOOO00OOO0OOOO0OO =[]#line:424
    OOOO00OOO0OOOO0OO .append (O000OOO0OOOO0O000 [0 ])#line:425
    O0OOOO00OO00O00OO =[]#line:426
    O0OOOO00OO00O00OO .append (OOO0O000OO00OO000 [0 ])#line:427
    print ("max rms is {}".format (np .max (OOOO0O00OO000O00O )))#line:428
    for O0OOOO000O0OO00OO in range (1 ,len (OOO0O000OO00OO000 )):#line:429
        O0O000000O0O000OO =OOO0O000OO00OO000 [O0OOOO000O0OO00OO ]#line:430
        O00OOO000OO00O0OO =OOO0O000OO00OO000 [O0OOOO000O0OO00OO -1 ]#line:431
        OOOO0OO0000O0OO0O =O000OOO0OOOO0O000 [O0OOOO000O0OO00OO ]#line:432
        O000O00O0OO00000O =O000OOO0OOOO0O000 [O0OOOO000O0OO00OO -1 ]#line:433
        if OOOO0OO0000O0OO0O ==O000O00O0OO00000O :#line:435
            if np .max (O000000O000OOOOO0 [OOOO0OO0000O0OO0O :OOOO0OO0000O0OO0O +4 ,O0O000000O0O000OO -1 ])==np .min (O000000O000OOOOO0 ):#line:436
                OOOO00OOO0OOOO0OO .append (O000OOO0OOOO0O000 [O0OOOO000O0OO00OO ])#line:437
                O0OOOO00OO00O00OO .append (OOO0O000OO00OO000 [O0OOOO000O0OO00OO ])#line:438
                print ("np.abs(rms[i+1] - rms[i-1]) is {},{},{}".format (OOOO0O00OO000O00O [O0O000000O0O000OO +1 ],OOOO0O00OO000O00O [O0O000000O0O000OO -1 ],np .abs (OOOO0O00OO000O00O [O0O000000O0O000OO +1 ]-OOOO0O00OO000O00O [O0O000000O0O000OO -1 ])))#line:439
            elif np .abs (OOOO0O00OO000O00O [O0O000000O0O000OO +1 ]-OOOO0O00OO000O00O [O0O000000O0O000OO -1 ])>0.08 :#line:440
                OOOO00OOO0OOOO0OO .append (O000OOO0OOOO0O000 [O0OOOO000O0OO00OO ])#line:441
                O0OOOO00OO00O00OO .append (OOO0O000OO00OO000 [O0OOOO000O0OO00OO ])#line:442
        else :#line:443
            OOOO00OOO0OOOO0OO .append (O000OOO0OOOO0O000 [O0OOOO000O0OO00OO ])#line:444
            O0OOOO00OO00O00OO .append (OOO0O000OO00OO000 [O0OOOO000O0OO00OO ])#line:445
    return O0OOOO00OO00O00OO ,OOOO00OOO0OOOO0OO #line:446
'''
找漏的
'''#line:450
def find_loss_by_rms_mean (O000000OO00OO0O00 ,O00OOO0O0OOO0OO0O ,O000OO00000O0O00O ):#line:451
    OO0OOOO0OO000000O =O000000OO00OO0O00 .copy ()#line:452
    OO00OOOO00OO0O000 =[O00OOO0O0OOO0OO0O [O0O000OO0O0000000 ]for O0O000OO0O0000000 in O000000OO00OO0O00 ]#line:453
    O00O000O00O00000O =np .mean (OO00OOOO00OO0O000 )#line:454
    print ("mean_rms_on_frames is {}".format (O00O000O00O00000O ))#line:455
    O000OOO0O0000OO00 =np .diff (O00OOO0O0OOO0OO0O )#line:456
    for OOO000OO0OO00000O in range (5 ,len (O00OOO0O0OOO0OO0O )-5 ):#line:457
        OOO0O00O00OO0000O =[np .abs (O000O0000000OO00O -OOO000OO0OO00000O )for O000O0000000OO00O in OO0OOOO0OO000000O ]#line:458
        O0O0O0O0O0OOO000O =np .min (OOO0O00O00OO0000O )#line:459
        O000OOOOOOO0O0OO0 =OOO000OO0OO00000O -2 #line:460
        OO0O0OO0OO0O0OO0O =OOO000OO0OO00000O +2 #line:461
        OO000OO0OOOO00OOO =O00OOO0O0OOO0OO0O [O000OOOOOOO0O0OO0 ]<O00O000O00O00000O -0.2 and O00OOO0O0OOO0OO0O [OO0O0OO0OO0O0OO0O ]>O00O000O00O00000O +0.2 #line:463
        if OO000OO0OOOO00OOO and O0O0O0O0O0OOO000O >10 :#line:465
            if O00OOO0O0OOO0OO0O [OOO000OO0OO00000O -3 ]<O00OOO0O0OOO0OO0O [OOO000OO0OO00000O ]:#line:467
                OO0OOOO0OO000000O .append (OOO000OO0OO00000O -3 )#line:468
            elif O00OOO0O0OOO0OO0O [OOO000OO0OO00000O -2 ]<O00OOO0O0OOO0OO0O [OOO000OO0OO00000O ]:#line:469
                OO0OOOO0OO000000O .append (OOO000OO0OO00000O -2 )#line:470
            elif O00OOO0O0OOO0OO0O [OOO000OO0OO00000O -1 ]<O00OOO0O0OOO0OO0O [OOO000OO0OO00000O ]:#line:471
                OO0OOOO0OO000000O .append (OOO000OO0OO00000O -1 )#line:472
            else :#line:473
                OO0OOOO0OO000000O .append (OOO000OO0OO00000O )#line:474
    OO0OOOO0OO000000O .sort ()#line:475
    OO00OOOO00OO0O000 =[O00OOO0O0OOO0OO0O [OO0OO000O0O0O0O0O ]for OO0OO000O0O0O0O0O in OO0OOOO0OO000000O ]#line:476
    O00O000O00O00000O =np .mean (OO00OOOO00OO0O000 )#line:477
    print ("mean_rms_on_frames is {}".format (O00O000O00O00000O ))#line:478
    return OO0OOOO0OO000000O #line:479
def continueUp (O0000O0OO00O00OOO ):#line:481
    OOO0OO000OO000OOO ,O0OOOOO0OO0OO0O00 =0 ,0 #line:482
    for O00O0OOO0O00O0000 in range (len (O0000O0OO00O00OOO )):#line:483
        OOO0OO000OO000OOO =OOO0OO000OO000OOO *O00O0OOO0O00O0000 +O00O0OOO0O00O0000 #line:485
        if OOO0OO000OO000OOO >O0OOOOO0OO0OO0O00 :#line:486
            O0OOOOO0OO0OO0O00 =OOO0OO000OO000OOO #line:488
    return O0OOOOO0OO0OO0O00 #line:489
def del_end_range (O000000OOO000O0OO ,OO00O00000O00O0OO ,OO0O0O0O00OO00OO0 ,OO0OO00OO0O00O0O0 ,OOO0O0O0OOO00OO0O ):#line:491
    OOOOOO0OO00000O00 =len (OO0OO00OO0O00O0O0 )#line:492
    OOO0OO00O0OOO000O =[]#line:493
    O0O0OO00OOO0OOOO0 =[]#line:494
    OOOO00000000000OO =[]#line:495
    O00000OO0OOOO0O0O =40 #line:496
    O00000OOOO0000OOO =O000000OOO000O0OO [0 ]+OOO0O0O0OOO00OO0O #line:497
    if O000000OOO000O0OO [-1 ]-O000000OOO000O0OO [-2 ]<25 :#line:498
        O00000OO0OOOO0O0O =20 #line:499
    for O0OOO0O0000O0OOO0 in range (len (O000000OOO000O0OO )):#line:500
        OOO0OO00000OO00O0 =O000000OOO000O0OO [O0OOO0O0000O0OOO0 ]#line:501
        OOOO000OO000O0OO0 =OO00O00000O00O0OO [O0OOO0O0000O0OOO0 ]#line:502
        O0OOO00O00000O00O =OO0O0O0O00OO00OO0 [O0OOO0O0000O0OOO0 ]#line:503
        O000O0OOO0000OOO0 =True #line:504
        if OOO0OO00000OO00O0 <O00000OOOO0000OOO and OOO0OO00000OO00O0 <OOOOOO0OO00000O00 -O00000OO0OOOO0O0O :#line:507
            OOO0OO00O0OOO000O .append (OOO0OO00000OO00O0 )#line:508
            O0O0OO00OOO0OOOO0 .append (OOOO000OO000O0OO0 )#line:509
            OOOO00000000000OO .append (O0OOO00O00000O00O )#line:510
    return OOO0OO00O0OOO000O ,O0O0OO00OOO0OOOO0 ,OOOO00000000000OO #line:511
def find_other_note_line (OO0OO00O00OO0O00O ,O0OOO0000O000O0O0 ,OO00000O00OO0O00O ):#line:514
    OO00OO00OOO00OOOO ,OO000OOOOO0OO00OO =OO00000O00OO0O00O .shape #line:515
    O000O00O00OO000O0 =np .min (OO00000O00OO0O00O )#line:517
    O0O000OOOO00O0000 =np .max (OO00000O00OO0O00O )#line:518
    O0OOOO00000OO0O0O =0 #line:519
    OOO000O00OOO000OO =[]#line:520
    OOOO00OO0O00O0OOO =[]#line:521
    for OOO00O0O00OOO0O0O in range (O0OOO0000O000O0O0 +1 ,OO00OO00OOO00OOOO -10 ):#line:523
        O000O000O0O00O000 =OO00000O00OO0O00O [OOO00O0O00OOO0O0O ]#line:524
        if np .max (O000O000O0O00O000 )==O0O000OOOO00O0000 :#line:525
            O000O000O0O00O000 =[1 if O000O000O0O00O000 [OO00OO0O000000O0O ]>O000O00O00OO000O0 else 0 for OO00OO0O000000O0O in range (len (O000O000O0O00O000 ))]#line:526
            O0O0OO000O000OO00 ,O00O000OO0O00OOOO =get_all_small_note_line (OO0OO00O00OO0O00O ,O000O000O0O00O000 )#line:527
            O0000O000O0OO00O0 =len (O0O0OO000O000OO00 )#line:528
            if O0000O000O0OO00O0 >O0OOOO00000OO0O0O :#line:529
                O0OOOO00000OO0O0O =O0000O000O0OO00O0 #line:530
                OOO000O00OOO000OO =O00O000OO0O00OOOO #line:531
                OOOO00OO0O00O0OOO =O0O0OO000O000OO00 #line:532
    return OOOO00OO0O00O0OOO ,OOO000O00OOO000OO #line:533
def get_all_small_note_line (O00OO00OOO0O0OO0O ,O000000O00OO00O00 ):#line:535
    O00000OO0OO00OOOO ,OOO0O0OOOO0OO0O0O =0 ,0 #line:536
    O000O00O0O000OO00 =0 #line:537
    OOO00000O00OOO000 =[]#line:538
    O0O0O0OO0OO0O00O0 =[]#line:539
    O000OO0000O0OO00O =0 #line:540
    OO0OOO0O0OO000O0O =0 #line:541
    for O0OOOOO00OO0OO00O in O000000O00OO00O00 :#line:542
        O00000OO0OO00OOOO =O00000OO0OO00OOOO *O0OOOOO00OO0OO00O +O0OOOOO00OO0OO00O #line:544
        if O00000OO0OO00OOOO ==1 :#line:546
            O000OO0000O0OO00O =O000O00O0O000OO00 #line:547
        O000O00O0O000OO00 +=1 #line:548
        if O00000OO0OO00OOOO ==0 and OO0OOO0O0OO000O0O >10 :#line:550
            OOO00000O00OOO000 .append (O00OO00OOO0O0OO0O +O000OO0000O0OO00O )#line:551
            O0O0O0OO0OO0O00O0 .append (OO0OOO0O0OO000O0O )#line:552
        OO0OOO0O0OO000O0O =O00000OO0OO00OOOO #line:553
    return OOO00000O00OOO000 ,O0O0O0OO0OO0O00O0 #line:555
def get_longest_note_line (OOO000O0O000O00OO ):#line:557
    OOOO00O0O000OOO0O ,OO0OO0OOO0O0O0O0O =OOO000O0O000O00OO .shape #line:558
    O00OOO000O0OO00OO =0 #line:561
    O0O00OOOOO00O0O00 =0 #line:562
    if OO0OO0OOO0O0O0O0O >0 :#line:563
        OOO0O0O000OOOO0O0 =np .min (OOO000O0O000O00OO )#line:564
        for O0000OO0O00O00OO0 in range (10 ,OOOO00O0O000OOO0O -10 ):#line:565
            OO0OOO000OOOO0O00 =OOO000O0O000O00OO [O0000OO0O00O00OO0 ]#line:566
            OO0OOO000OOOO0O00 =[1 if OO0OOO000OOOO0O00 [O000OOO0O0000OOO0 ]>OOO0O0O000OOOO0O0 else 0 for O000OOO0O0000OOO0 in range (len (OO0OOO000OOOO0O00 ))]#line:567
            OOOO0OO0O00O00OOO =continueOne (OO0OOO000OOOO0O00 )#line:568
            if OOOO0OO0O00O00OOO >0.8 *OO0OO0OOO0O0O0O0O :#line:569
                return O0000OO0O00O00OO0 ,OOOO0OO0O00O00OOO #line:570
            else :#line:571
                if OOOO0OO0O00O00OOO >O00OOO000O0OO00OO :#line:572
                    O00OOO000O0OO00OO =OOOO0OO0O00O00OOO #line:573
                    O0O00OOOOO00O0O00 =O0000OO0O00O00OO0 #line:574
    return O0O00OOOOO00O0O00 ,O00OOO000O0OO00OO #line:575
def get_longest_note_line_v2 (OO000OO0OOOOOO00O ):#line:577
    O0000O00O0O00O0O0 ,OOO00O0O0O000O0O0 =OO000OO0OOOOOO00O .shape #line:578
    O0OOO0OOOOO0O000O =[]#line:580
    O0O00000O00OOO000 =0 #line:581
    OOOO0OO00000O0O0O =0 #line:582
    if OOO00O0O0O000O0O0 >0 :#line:583
        O0O0OO0O0000OO0OO =np .min (OO000OO0OOOOOO00O )#line:584
        for OOOO0000000000000 in range (10 ,O0000O00O0O00O0O0 -10 ):#line:585
            OO00O00O0OOO000OO =OO000OO0OOOOOO00O [OOOO0000000000000 ]#line:586
            OO00O00O0OOO000OO =[1 if OO00O00O0OOO000OO [O0OO0OOO00OOO0OOO ]>O0O0OO0O0000OO0OO else 0 for O0OO0OOO00OOO0OOO in range (len (OO00O00O0OOO000OO ))]#line:587
            OOOO0OO00OO0O00O0 =continueOne (OO00O00O0OOO000OO )#line:588
            if OOOO0OO00OO0O00O0 >0.8 *OOO00O0O0O000O0O0 :#line:589
                return OOOO0000000000000 ,OOOO0OO00OO0O00O0 #line:590
            else :#line:591
                if OOOO0OO00OO0O00O0 >O0O00000O00OOO000 :#line:592
                    O0O00000O00OOO000 =OOOO0OO00OO0O00O0 #line:593
                    OOOO0OO00000O0O0O =OOOO0000000000000 #line:594
    return OOOO0OO00000O0O0O ,O0O00000O00OOO000 #line:595
def continueOne (O000000O00000OOO0 ):#line:597
    O0OO0OOO0OO00OOO0 ,OOO0O0000O00OOO0O =0 ,0 #line:598
    for O00OO0O0OO000OOO0 in O000000O00000OOO0 :#line:599
        O0OO0OOO0OO00OOO0 =O0OO0OOO0OO00OOO0 *O00OO0O0OO000OOO0 +O00OO0O0OO000OOO0 #line:601
        if O0OO0OOO0OO00OOO0 >OOO0O0000O00OOO0O :#line:602
            OOO0O0000O00OOO0O =O0OO0OOO0OO00OOO0 #line:604
    return OOO0O0000O00OOO0O #line:605
def getLongestLine (O0000O0O0OOO00O00 ):#line:607
    O0O0OO0O0OOOO000O ,O0OO0O0O00OOOOO00 ,O0000O0O0000O0O0O ,OO0OO0O000OO000O0 =0 ,0 ,0 ,1 #line:608
    for O00OO0O0O0OOOO00O in O0000O0O0OOO00O00 :#line:609
        O0O0OO0O0OOOO000O =O0O0OO0O0OOOO000O *O00OO0O0O0OOOO00O +O00OO0O0O0OOOO00O #line:611
        if O0O0OO0O0OOOO000O >O0OO0O0O00OOOOO00 :#line:612
            O0OO0O0O00OOOOO00 =O0O0OO0O0OOOO000O #line:614
            O0000O0O0000O0O0O =OO0OO0O000OO000O0 -O0O0OO0O0OOOO000O #line:615
        OO0OO0O000OO000O0 +=1 #line:616
    return O0OO0O0O00OOOOO00 ,O0000O0O0000O0O0O #line:617
def get_loss_at_begin (O0OO000000OO0OOO0 ,O00000O000O0O00O0 ,O0OO0O0OOO0000O00 ,O00O0000OOOO000OO ):#line:621
    OOOO0O00OOO00OOOO =np .min (O0OO000000OO0OOO0 )#line:622
    OO0OOOOOO0O00OOOO ,OOOO0OO0000OOOO00 =O0OO000000OO0OOO0 .shape #line:623
    O00OO00OOOO0O00O0 =O00000O000O0O00O0 [0 ]#line:624
    O0O0O0OO0000OOOO0 ,OO000000OOOOOOOOO ,O0O00000OO0O0O000 =0 ,0 ,0 #line:625
    if O00OO00OOOO0O00O0 >60 :#line:626
        OO00OO00OO0OO0O0O =O0OO000000OO0OOO0 [:,:O00OO00OOOO0O00O0 ]#line:627
        for O000O00O00OO0OO00 in range (10 ,OO0OOOOOO0O00OOOO -10 ):#line:628
            O00OO00000O00O0O0 =OO00OO00OO0OO0O0O [O000O00O00OO0OO00 ]#line:629
            O00OO00000O00O0O0 =[1 if O00OO00000O00O0O0 [O0OO0O00O0O0OO00O ]>OOOO0O00OOO00OOOO else 0 for O0OO0O00O0O0OO00O in range (len (O00OO00000O00O0O0 ))]#line:630
            OO00OO0O0O0OOOO00 ,O0O0OO0OOO000OO00 =getLongestLine (O00OO00000O00O0O0 )#line:631
            if OO00OO0O0O0OOOO00 >O0O0O0OO0000OOOO0 :#line:632
                O0O0O0OO0000OOOO0 =OO00OO0O0O0OOOO00 #line:633
                OO000000OOOOOOOOO =O0O0OO0OOO000OO00 #line:634
                O0O00000OO0O0O000 =O000O00O00OO0OO00 #line:635
        if O0O0O0OO0000OOOO0 >30 :#line:637
            O00000O000O0O00O0 .insert (0 ,OO000000OOOOOOOOO )#line:638
            O0OO0O0OOO0000O00 .insert (0 ,O0O00000OO0O0O000 )#line:639
            O00O0000OOOO000OO .insert (0 ,O0O0O0OO0000OOOO0 )#line:640
    return O00000O000O0O00O0 ,O0OO0O0OOO0000O00 ,O00O0000OOOO000OO #line:641
'''
求两个字符串的最长公共子串
思想：建立一个二维数组，保存连续位相同与否的状态
'''#line:646
def getNumofCommonSubstr (OO0000O00OOOO0000 ,O0OO0OOOO0O0000O0 ):#line:649
    OOOOO0O000OO00OOO =len (OO0000O00OOOO0000 )#line:650
    OOOOO00OOOO0O0O0O =len (O0OO0OOOO0O0000O0 )#line:651
    O00O000OOOO0OO00O =[[0 for OOOO00OOO00000OO0 in range (OOOOO00OOOO0O0O0O +1 )]for O0OO0O00OO000OOOO in range (OOOOO0O000OO00OOO +1 )]#line:652
    OO00O0O0O0O0O0OOO =0 #line:653
    OO000000O0OO0OOO0 =0 #line:654
    for OO000OOO00000O0OO in range (OOOOO0O000OO00OOO ):#line:656
        for O000OO0OO0OO0O0OO in range (OOOOO00OOOO0O0O0O ):#line:657
            if OO0000O00OOOO0000 [OO000OOO00000O0OO ]==O0OO0OOOO0O0000O0 [O000OO0OO0OO0O0OO ]:#line:658
                O00O000OOOO0OO00O [OO000OOO00000O0OO +1 ][O000OO0OO0OO0O0OO +1 ]=O00O000OOOO0OO00O [OO000OOO00000O0OO ][O000OO0OO0OO0O0OO ]+1 #line:660
                if O00O000OOOO0OO00O [OO000OOO00000O0OO +1 ][O000OO0OO0OO0O0OO +1 ]>OO00O0O0O0O0O0OOO :#line:661
                    OO00O0O0O0O0O0OOO =O00O000OOOO0OO00O [OO000OOO00000O0OO +1 ][O000OO0OO0OO0O0OO +1 ]#line:663
                    OO000000O0OO0OOO0 =OO000OOO00000O0OO +1 #line:665
    return OO0000O00OOOO0000 [OO000000O0OO0OOO0 -OO00O0O0O0O0O0OOO :OO000000O0OO0OOO0 ],OO00O0O0O0O0O0OOO #line:666
def get_match_notes (O0O000OO0000OOO00 ,O00O0OO0O0O0000OO ):#line:668
    OOOOO0O00OO00OO00 ,OOO0O000O0O00O0O0 =getNumofCommonSubstr (O0O000OO0000OOO00 ,O00O0OO0O0O0000OO )#line:669
    return OOOOO0O00OO00OO00 #line:671
def check_all_notes_trend (OOO00OOO0000O00OO ,O00O00OO00O0OO00O ):#line:673
    O00O000000OOOOO0O =[]#line:674
    OOOOO00OOOO0O00O0 =[]#line:675
    OO000O000000O00OO =''#line:676
    OOOO0OO0OOO0000O0 =''#line:677
    for OOO00O0O0000OO0O0 in range (1 ,len (OOO00OOO0000O00OO )):#line:678
        if OOO00OOO0000O00OO [OOO00O0O0000OO0O0 ]>OOO00OOO0000O00OO [OOO00O0O0000OO0O0 -1 ]:#line:679
            OOO00O0OO0O00O00O =1 #line:680
        if OOO00OOO0000O00OO [OOO00O0O0000OO0O0 ]==OOO00OOO0000O00OO [OOO00O0O0000OO0O0 -1 ]:#line:681
            OOO00O0OO0O00O00O =0 #line:682
        if OOO00OOO0000O00OO [OOO00O0O0000OO0O0 ]<OOO00OOO0000O00OO [OOO00O0O0000OO0O0 -1 ]:#line:683
            OOO00O0OO0O00O00O =2 #line:684
        O00O000000OOOOO0O .append (str (OOO00O0OO0O00O00O ))#line:685
        OO000O000000O00OO =''.join (O00O000000OOOOO0O )#line:686
    for OOO00O0O0000OO0O0 in range (1 ,len (O00O00OO00O0OO00O )):#line:687
        if O00O00OO00O0OO00O [OOO00O0O0000OO0O0 ]>O00O00OO00O0OO00O [OOO00O0O0000OO0O0 -1 ]:#line:688
            OOO00O0OO0O00O00O =1 #line:689
        if O00O00OO00O0OO00O [OOO00O0O0000OO0O0 ]==O00O00OO00O0OO00O [OOO00O0O0000OO0O0 -1 ]:#line:690
            OOO00O0OO0O00O00O =0 #line:691
        if O00O00OO00O0OO00O [OOO00O0O0000OO0O0 ]<O00O00OO00O0OO00O [OOO00O0O0000OO0O0 -1 ]:#line:692
            OOO00O0OO0O00O00O =2 #line:693
        OOOOO00OOOO0O00O0 .append (str (OOO00O0OO0O00O00O ))#line:694
        OOOO0OO0OOO0000O0 =''.join (OOOOO00OOOO0O00O0 )#line:695
    OOOO000000O00000O =get_match_notes (OOOO0OO0OOO0000O0 ,OO000O000000O00OO )#line:696
    O0000O0OO0OO000O0 =OO000O000000O00OO .find (OOOO000000O00000O )#line:697
    OO0OO00O0O0OOOOO0 =O0000O0OO0OO000O0 +len (OOOO000000O00000O )#line:698
    O000OOOO00O0000OO =OOOO0OO0OOO0000O0 .find (OOOO000000O00000O )#line:700
    O0000O00O00O00O0O =O000OOOO00O0000OO +len (OOOO000000O00000O )#line:701
    OOO00000OOOO00O00 =[]#line:702
    OOOO00O0O00000O0O =[]#line:703
    if O0000O0OO0OO000O0 >=2 and O000OOOO00O0000OO >=2 :#line:704
        OOO00000OOOO00O00 =get_match_notes (OO000O000000O00OO [0 :O0000O0OO0OO000O0 ],OOOO0OO0OOO0000O0 [0 :O000OOOO00O0000OO ])#line:705
    if OO0OO00O0O0OOOOO0 >=2 and O0000O00O00O00O0O >=2 :#line:706
        OOOO00O0O00000O0O =get_match_notes (OO000O000000O00OO [OO0OO00O0O0OOOOO0 +1 :],OOOO0OO0OOO0000O0 [OO0OO00O0O0OOOOO0 +1 :])#line:707
    return OOO00000OOOO00O00 ,OOOO000000O00000O ,OOOO00O0O00000O0O #line:709
def find_hightest_after (O00O00OOO0O0O0O0O ,OOO00O00OOOOOOO0O ):#line:711
    O0000O0O00O0OO0OO =O00O00OOO0O0O0O0O #line:712
    for O000OO00OOOOOO000 in range (O00O00OOO0O0O0O0O +1 ,len (OOO00O00OOOOOOO0O )-1 ):#line:713
        if OOO00O00OOOOOOO0O [O000OO00OOOOOO000 ]>OOO00O00OOOOOOO0O [O000OO00OOOOOO000 -1 ]:#line:714
            O0000O0O00O0OO0OO +=1 #line:715
        else :#line:716
            break #line:717
    return O0000O0O00O0OO0OO #line:718
def find_hightest_before (OOO0O00000O00OO00 ,OO0000OO0O00OO000 ):#line:720
    OOO0O0O000O0O00O0 =OOO0O00000O00OO00 #line:721
    for OO00000OOO0000000 in range (OOO0O00000O00OO00 -1 ,0 ,-1 ):#line:722
        if OO0000OO0O00OO000 [OO00000OOO0000000 -1 ]<=OO0000OO0O00OO000 [OO00000OOO0000000 ]:#line:723
            OOO0O0O000O0O00O0 -=1 #line:724
        else :#line:725
            break #line:726
    return OOO0O0O000O0O00O0 #line:727
def change_rms (OOOOO0O0OOO000O00 ,OO000O0O0OO00O0O0 ,O0O0000OO0O0O0OO0 ,OO0O00O0000000000 ,OOOOOO0O0O00000O0 ,O0O0O0O00OO0OOO0O ):#line:729
    O0O0O0O00OO0OOO0O =O0O0O0O00OO0OOO0O .replace (";",',')#line:730
    O0O0O0O00OO0OOO0O =O0O0O0O00OO0OOO0O .replace ("[",'')#line:731
    O0O0O0O00OO0OOO0O =O0O0O0O00OO0OOO0O .replace ("]",'')#line:732
    O0O0O0O00OO0OOO0O =[OOOO000000O00OO00 for OOOO000000O00OO00 in O0O0O0O00OO0OOO0O .split (',')]#line:733
    OOO0O0OO00000OOOO =[]#line:734
    OO000OO0O0O0O0O0O ={}#line:735
    OO0O0O0O0O0O0OO0O ={}#line:736
    OOO00O000000OOOOO =[]#line:738
    OOO00O000000OOOOO .append (OOOOO0O0OOO000O00 [0 ])#line:739
    print ("all onsets_frames is {}".format (OOOOO0O0OOO000O00 ))#line:740
    OOO00O0O0O0O000O0 =[]#line:741
    OO0000OO0OO0O0000 =[OOOOO0O0OO0000000 for OOOOO0O0OO0000000 in range (len (O0O0O0O00OO0OOO0O ))if O0O0O0O00OO0OOO0O [OOOOO0O0OO0000000 ]=='250']#line:742
    O0O00OOOOO0OO0OO0 =9 #line:744
    if len (OO0000OO0OO0O0000 )>0 :#line:745
        O0O00OOOOO0OO0OO0 =5 #line:746
    for OOO0O000O0000OOOO in range (1 ,len (OO000O0O0OO00O0O0 )):#line:747
        if np .abs (OO000O0O0OO00O0O0 [OOO0O000O0000OOOO ]-OO000O0O0OO00O0O0 [OOO0O000O0000OOOO -1 ])>1 :#line:748
            OOO00O000000OOOOO .append (OOOOO0O0OOO000O00 [OOO0O000O0000OOOO ])#line:749
    for OOO0O000O0000OOOO in range (1 ,len (O0O0000OO0O0O0OO0 )-3 ):#line:750
        if (OOO0O000O0000OOOO ==1 and O0O0000OO0O0O0OO0 [2 ]>O0O0000OO0O0O0OO0 [1 ])or (O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO +1 ]>O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO ]and O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO -1 ]>O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO ]):#line:751
            O00OO00O0O0O00O0O =find_hightest_after (OOO0O000O0000OOOO ,O0O0000OO0O0O0OO0 )#line:752
            if O0O0000OO0O0O0OO0 [O00OO00O0O0O00O0O ]-O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO ]>0.3 :#line:753
                print ("rms[hightest_point_after] - rms[i],i is {}=={}".format (O0O0000OO0O0O0OO0 [O00OO00O0O0O00O0O ]-O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO ],OOO0O000O0000OOOO ))#line:754
                O000O000OOOOO0OOO =O0O0000OO0O0O0OO0 [O00OO00O0O0O00O0O ]-O0O0000OO0O0O0OO0 [OOO0O000O0000OOOO ]#line:755
                OOO0O0OO00000OOOO .append (O000O000OOOOO0OOO )#line:756
                OO000OO0O0O0O0O0O [O000O000OOOOO0OOO ]=OOO0O000O0000OOOO #line:757
                OO0O0O0O0O0O0OO0O [OOO0O000O0000OOOO ]=O000O000OOOOO0OOO #line:758
    O0000OOOOO00O0OO0 =find_n_largest (OOO0O0OO00000OOOO ,OOOOOO0O0O00000O0 )#line:759
    O00OO0O00OOOO0000 =[OOO0O0OO00000OOOO [OO00OO0O0OOO0OOO0 ]for OO00OO0O0OOO0OOO0 in O0000OOOOO00O0OO0 ]#line:760
    for O0O00OOOO0O00O0O0 in O00OO0O00OOOO0000 :#line:761
        OO00000O0O0000000 =OO000OO0O0O0O0O0O .get (O0O00OOOO0O00O0O0 )#line:762
        O00OO000000OOO0O0 =[np .abs (OO00000O0O0000000 -OOOOO000OOO0OO0O0 )for OOOOO000OOO0OO0O0 in OOO00O000000OOOOO ]#line:763
        if OO00000O0O0000000 >OOOOO0O0OOO000O00 [0 ]and np .min (O00OO000000OOO0O0 )>O0O00OOOOO0OO0OO0 :#line:764
            OOO00O000000OOOOO .append (OO00000O0O0000000 )#line:765
            OOO00O0O0O0O000O0 .append (OO00000O0O0000000 )#line:766
            print ("add index is {}".format (OO00000O0O0000000 ))#line:767
        elif OO00000O0O0000000 <OOOOO0O0OOO000O00 [0 ]and O0O00OOOO0O00O0O0 >1.8 :#line:768
            O00OO0O0OO00O0O00 =OO0O00O0000000000 [10 :,OO00000O0O0000000 :OOOOO0O0OOO000O00 [0 ]]#line:769
            OO00O0O0OOO00O0O0 =np .min (OO0O00O0000000000 )#line:770
            OOO0OO0OOOO0O00O0 ,O0O000000O000O0OO ,O0OO00000OOOOOOOO =get_longest_for_cols_cqt (O00OO0O0OO00O0O00 ,OO00O0O0OOO00O0O0 )#line:771
            if OOO0OO0OOOO0O00O0 >10 :#line:772
                OOO00O000000OOOOO .append (OO00000O0O0000000 )#line:773
                OOO00O0O0O0O000O0 .append (OO00000O0O0000000 )#line:774
                print ("add index is {}".format (OO00000O0O0000000 ))#line:775
    OOO00O000000OOOOO .sort ()#line:776
    print ("all frames is {}".format (OOO00O000000OOOOO ))#line:777
    return OOO00O000000OOOOO ,OO0O0O0O0O0O0OO0O ,OOO00O0O0O0O000O0 #line:778
def cal_note_score (O000OO0OOO000OOO0 ,O0OOO0OOO0OO00O0O ):#line:779
    OOOOO000OO000OOOO =int (np .mean (O0OOO0OOO0OO00O0O )-np .mean (O000OO0OOO000OOO0 ))#line:780
    O0OOO0OOO0OO00O0O =[O0O0000OOOOOO00OO -OOOOO000OO000OOOO for O0O0000OOOOOO00OO in O0OOO0OOO0OO00O0O ]#line:782
    print ("base_notes is {}".format (O0OOO0OOO0OO00O0O ))#line:783
    O00O0000OO0O00O0O =lambda OOOOO000000O0O0OO ,O0000O000O000O00O :np .abs (OOOOO000000O0O0OO -O0000O000O000O00O )#line:784
    if (len (O000OO0OOO000OOO0 )!=len (O0OOO0OOO0OO00O0O )):#line:785
        O0000OOOO000000O0 ,OOOO000O0O00O00O0 ,OOO00O0000O000OOO ,O00OO00O0O0OOO00O =dtw (O000OO0OOO000OOO0 ,O0OOO0OOO0OO00O0O ,dist =O00O0000OO0O00O0O )#line:786
        O0OO0OOOO0000OOOO =60 -int (O0000OOOO000000O0 *np .sum (OOO00O0000O000OOO .shape ))#line:787
    else :#line:788
        OO0000000OOO000O0 =60 /len (O000OO0OOO000OOO0 )#line:789
        O0OO0OOOO0000OOOO =0 #line:790
        for OOO000O00OOO0O0O0 in range (len (O000OO0OOO000OOO0 )):#line:791
            if np .abs (O000OO0OOO000OOO0 [OOO000O00OOO0O0O0 ]-O0OOO0OOO0OO00O0O [OOO000O00OOO0O0O0 ])<=1 :#line:792
                O0OO0OOOO0000OOOO +=OO0000000OOO000O0 #line:793
            elif np .abs (O000OO0OOO000OOO0 [OOO000O00OOO0O0O0 ]-O0OOO0OOO0OO00O0O [OOO000O00OOO0O0O0 ])<=2 :#line:794
                O0OO0OOOO0000OOOO +=OO0000000OOO000O0 *0.5 #line:795
        O0OO0OOOO0000OOOO =int (O0OO0OOOO0000OOOO )#line:796
    return O0OO0OOOO0000OOOO #line:797
def cal_score_v2 (OO00O0000O0000000 ,OOO0OOOOO00OOO0OO ,O0O0O00O00O0OOOOO ,O0O0OO000OOO00000 ):#line:798
    OO0000000O00OOOOO ,O00000O0OO0OOO0OO ,O00O00O0000O00O00 ,O0O0O00O000OOO0O0 ,OO000O0O0000OO0O0 =get_score (OO00O0000O0000000 ,OOO0OOOOO00OOO0OO ,O0O0O00O00O0OOOOO ,O0O0OO000OOO00000 )#line:799
    if OO0000000O00OOOOO <75 and OO0000000O00OOOOO >60 :#line:801
        OO0000000O00OOOOO -=15 #line:802
        O00000O0OO0OOO0OO -=6 #line:803
        O00O00O0000O00O00 -=9 #line:804
    print ("cal_score_v2 total_score, onsets_score, notes_score is {},{},{} ".format (OO0000000O00OOOOO ,O00000O0OO0OOO0OO ,O00O00O0000O00O00 ))#line:805
    return OO0000000O00OOOOO ,O00000O0OO0OOO0OO ,O00O00O0000O00O00 #line:806
def get_score (O0O00OO00O00OOO0O ,OO0O00OOO0O0O0OOO ,OO0OOO0O0000OOOO0 ,O0OOOOOO00OOOO0O0 ):#line:807
    OO00OOO0OO0O000OO =base_note (O0O00OO00O00OOO0O )#line:809
    OO000OOO00O00000O =int (np .mean (O0OOOOOO00OOOO0O0 )-np .mean (OO0O00OOO0O0O0OOO ))#line:811
    O0OOOOOO00OOOO0O0 =[OO000OO0OOOO00O0O -OO000OOO00O00000O for OO000OO0OOOO00O0O in O0OOOOOO00OOOO0O0 ]#line:813
    O00O0O000O0O0000O ,O0OOOO00O00O0O0OO ,_O0O0OOOOO0OO0OO00 =get_dtw_min (OO0O00OOO0O0O0OOO ,O0OOOOOO00OOOO0O0 ,65 )#line:814
    OOOO00O0O0O00OO00 =40 -int (O00O0O000O0O0000O )#line:815
    if len (OO0O00OOO0O0O0OOO )<len (O0OOOOOO00OOOO0O0 )*0.75 :#line:816
        OOOO00O0O0O00OO00 =OOOO00O0O0O00OO00 -int (40 *(len (O0OOOOOO00OOOO0O0 )-len (OO0O00OOO0O0O0OOO ))/len (O0OOOOOO00OOOO0O0 ))#line:817
    OO000OOO00O00000O =int (np .mean (OO00OOO0OO0O000OO )-np .mean (OO0OOO0O0000OOOO0 ))#line:819
    OO00OOO0OO0O000OO =[OOOOOOO0O000OOOO0 -OO000OOO00O00000O for OOOOOOO0O000OOOO0 in OO00OOO0OO0O000OO ]#line:821
    O0O0000OO0O0OO00O =lambda O0O00O0000000000O ,O0000OOO00000O00O :np .abs (O0O00O0000000000O -O0000OOO00000O00O )#line:823
    if (len (OO0OOO0O0000OOOO0 )!=len (OO00OOO0OO0O000OO )):#line:824
        O0O0O0OO0O0O0O0O0 ,OOO00000O000O00O0 ,O0OO0OOO0000OO000 ,OOO0OO0OO000000OO =dtw (OO0OOO0O0000OOOO0 ,OO00OOO0OO0O000OO ,dist =O0O0000OO0O0OO00O )#line:825
        OOO00OO0OOO00O0O0 =60 -int (O0O0O0OO0O0O0O0O0 *np .sum (O0OO0OOO0000OO000 .shape ))#line:826
    else :#line:827
        OO0000000O0OO000O =60 /len (OO0OOO0O0000OOOO0 )#line:828
        OOO00OO0OOO00O0O0 =0 #line:829
        for OOOO0O0OOOOO00O0O in range (len (OO0OOO0O0000OOOO0 )):#line:830
            if np .abs (OO0OOO0O0000OOOO0 [OOOO0O0OOOOO00O0O ]-OO00OOO0OO0O000OO [OOOO0O0OOOOO00O0O ])<=1 :#line:831
                OOO00OO0OOO00O0O0 +=OO0000000O0OO000O #line:832
            elif np .abs (OO0OOO0O0000OOOO0 [OOOO0O0OOOOO00O0O ]-OO00OOO0OO0O000OO [OOOO0O0OOOOO00O0O ])<=2 :#line:833
                OOO00OO0OOO00O0O0 +=OO0000000O0OO000O *0.5 #line:834
        OOO00OO0OOO00O0O0 =int (OOO00OO0OOO00O0O0 )#line:835
    if len (OO0OOO0O0000OOOO0 )<len (OO00OOO0OO0O000OO )*0.75 and OOO00OO0OOO00O0O0 <55 :#line:836
        OOO00OO0OOO00O0O0 =OOO00OO0OOO00O0O0 -int (60 *(len (OO00OOO0OO0O000OO )-len (OO0OOO0O0000OOOO0 ))/len (OO00OOO0OO0O000OO ))#line:837
    if OOO00OO0OOO00O0O0 <=0 :#line:838
        OOOO00O0O0O00OO00 =int (OOOO00O0O0O00OO00 /2 )#line:839
        OOO00OO0OOO00O0O0 =0 #line:840
    if OOO00OO0OOO00O0O0 >=40 and OOOO00O0O0O00OO00 <=5 :#line:841
        OOOO00O0O0O00OO00 =int (40 *OOO00OO0OOO00O0O0 /60 )#line:842
    OOO0000OOO00O0OO0 =OOOO00O0O0O00OO00 +OOO00OO0OOO00O0O0 #line:843
    OOOO00O0OOOO00OO0 ,O0000000OOOOO00O0 =check_notes_trend (OO0OOO0O0000OOOO0 ,OO00OOO0OO0O000OO )#line:844
    if 60 *OOOO00O0OOOO00OO0 >OOO00OO0OOO00O0O0 :#line:846
        OOO00OO0OOO00O0O0 =int (60 *OOOO00O0OOOO00OO0 )#line:847
        OOO0000OOO00O0OO0 =OOO00OO0OOO00O0O0 +OOOO00O0O0O00OO00 #line:848
    if OOO00OO0OOO00O0O0 <45 and OOOO00O0O0O00OO00 <35 :#line:854
            OOOO00O0O0O00OO00 =int (40 *O0000000OOOOO00O0 /len (OO00OOO0OO0O000OO ))#line:855
            OOO00OO0OOO00O0O0 =int (60 *O0000000OOOOO00O0 /len (OO00OOO0OO0O000OO ))#line:856
            OOO0000OOO00O0OO0 =OOO00OO0OOO00O0O0 +OOOO00O0O0O00OO00 #line:857
    OO000000O0OOOO000 ,O0OOO000O0O000O00 ,O00O0OO0O0O0OOOO0 =check_all_notes_trend (OO0OOO0O0000OOOO0 ,OO00OOO0OO0O000OO )#line:863
    return OOO0000OOO00O0OO0 ,OOOO00O0O0O00OO00 ,OOO00OO0OOO00O0O0 ,O0000000OOOOO00O0 ,len (OO00OOO0OO0O000OO )#line:873
def check_notes_trend (OOO0O00OOO000000O ,O0O0OO0O0OOOOO0O0 ):#line:875
    O00OOOOO0O00OOOO0 =[]#line:876
    O00OO0OOO0O00O0O0 =[]#line:877
    O0O000OOOO0O00OOO =''#line:878
    O000OOOOO000OOO00 =''#line:879
    for O00OOO00O00OOOO0O in range (1 ,len (OOO0O00OOO000000O )):#line:880
        if OOO0O00OOO000000O [O00OOO00O00OOOO0O ]>OOO0O00OOO000000O [O00OOO00O00OOOO0O -1 ]:#line:881
            O000OOOO000OO0000 =1 #line:882
        if OOO0O00OOO000000O [O00OOO00O00OOOO0O ]==OOO0O00OOO000000O [O00OOO00O00OOOO0O -1 ]:#line:883
            O000OOOO000OO0000 =0 #line:884
        if OOO0O00OOO000000O [O00OOO00O00OOOO0O ]<OOO0O00OOO000000O [O00OOO00O00OOOO0O -1 ]:#line:885
            O000OOOO000OO0000 =2 #line:886
        O00OOOOO0O00OOOO0 .append (str (O000OOOO000OO0000 ))#line:887
        O0O000OOOO0O00OOO =''.join (O00OOOOO0O00OOOO0 )#line:888
    for O00OOO00O00OOOO0O in range (1 ,len (O0O0OO0O0OOOOO0O0 )):#line:889
        if O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O ]>O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O -1 ]:#line:890
            O000OOOO000OO0000 =1 #line:891
        if O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O ]==O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O -1 ]:#line:892
            O000OOOO000OO0000 =0 #line:893
        if O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O ]<O0O0OO0O0OOOOO0O0 [O00OOO00O00OOOO0O -1 ]:#line:894
            O000OOOO000OO0000 =2 #line:895
        O00OO0OOO0O00O0O0 .append (str (O000OOOO000OO0000 ))#line:896
        O000OOOOO000OOO00 =''.join (O00OO0OOO0O00O0O0 )#line:897
    OOOO00000O00OO000 ,O0O0O0O00O000OOO0 =getNumofCommonSubstr (O000OOOOO000OOO00 ,O0O000OOOO0O00OOO )#line:899
    O000O0O0OOOOOO0O0 =O0O000OOOO0O00OOO .find (OOOO00000O00OO000 )#line:902
    OO0OOO0OOOO00O0O0 =O000O0O0OOOOOO0O0 +len (OOOO00000O00OO000 )#line:903
    O0OO000O00O00O000 =OOO0O00OOO000000O [O000O0O0OOOOOO0O0 :OO0OOO0OOOO00O0O0 +1 ]#line:904
    O000O0O0OOOOOO0O0 =O000OOOOO000OOO00 .find (OOOO00000O00OO000 )#line:906
    OO0OOO0OOOO00O0O0 =O000O0O0OOOOOO0O0 +len (OOOO00000O00OO000 )#line:907
    OO00OOOO0OO0OO0OO =O0O0OO0O0OOOOO0O0 [O000O0O0OOOOOO0O0 :OO0OOO0OOOO00O0O0 +1 ]#line:908
    O000OOO00O0O0OOOO =[1 if np .abs (O0OO000O00O00O000 [O0OO00OO0O00000O0 ]-OO00OOOO0OO0OO0OO [O0OO00OO0O00000O0 ])<1 else 0 for O0OO00OO0O00000O0 in range (len (OO00OOOO0OO0OO0OO ))]#line:910
    O0O0O0OOOOOOO0O0O =len (OOOO00000O00OO000 )/len (O000OOOOO000OOO00 )#line:911
    return O0O0O0OOOOOOO0O0O ,len (OOOO00000O00OO000 )#line:913
def cal_score_v1 (OO0O000O0O00O0O0O ,O0O00OOOOOOO000OO ,OO0O0OOOOOOOO0000 ,O00OOOO0O0O00O00O ,OOO0O00O00O00OOOO ,O000OOOOO00OOOOOO ,O0O00O0OO00000OOO ):#line:915
    O0O0OOOOOOO0O0O00 ,OOOOO000OO0O00OOO ,O0O0000OOO0O0OO0O ,O00000OOO0000O000 =get_score_for_note_v2 (O0O00OOOOOOO000OO .copy (),O00OOOO0O0O00O00O .copy (),O0O00O0OO00000OOO )#line:917
    print ("score, lost_score, ex_score, min_d is {},{},{},{}".format (O0O0OOOOOOO0O0O00 ,OOOOO000OO0O00OOO ,O0O0000OOO0O0OO0O ,O00000OOO0000O000 ))#line:918
    O00OOOO000OOOO000 =cal_note_score (OO0O0OOOOOOOO0000 ,OOO0O00O00O00OOOO )#line:920
    O0O0OOOOOOO0O0O00 =int (O0O0OOOOOOO0O0O00 *0.4 )#line:921
    O0OOO000O0OO000OO =O0O0OOOOOOO0O0O00 +O00OOOO000OOOO000 #line:922
    if O00OOOO000OOOO000 >56 :#line:929
        O0O0OOOOOOO0O0O00 =int (40 /60 *O00OOOO000OOOO000 )#line:930
        print ("changed 1")#line:931
    elif O00OOOO000OOOO000 >50 and O0OOO000O0OO000OO <=80 and O0OOO000O0OO000OO >70 :#line:932
        O0O0OOOOOOO0O0O00 =int (40 /60 *O00OOOO000OOOO000 )#line:933
        print ("changed 2")#line:934
    O0OOO000O0OO000OO =O0O0OOOOOOO0O0O00 +O00OOOO000OOOO000 #line:936
    if len (O00OOOO0O0O00O00O )-len (O0O00OOOOOOO000OO )>=5 :#line:939
        O0OOO000O0OO000OO ,O0O0OOOOOOO0O0O00 ,O00OOOO000OOOO000 =40 ,15 ,25 #line:940
        print ("changed 3")#line:941
    if O00OOOO000OOOO000 <5 :#line:944
        O00OOOO000OOOO000 =int (60 *O0O0OOOOOOO0O0O00 /40 )#line:945
        O0OOO000O0OO000OO =O0O0OOOOOOO0O0O00 +O00OOOO000OOOO000 #line:946
        print ("changed 4")#line:947
    OOO0OO0OO0OO00O0O =0 #line:950
    for O00OOO000O000O00O in range (1 ,len (O0O00OOOOOOO000OO )):#line:951
        if O000OOOOO00OOOOOO [O00OOO000O000O00O -1 ]<=(O0O00OOOOOOO000OO [O00OOO000O000O00O ]-O0O00OOOOOOO000OO [O00OOO000O000O00O -1 ])/3 :#line:952
            OOO0OO0OO0OO00O0O +=1 #line:953
    if OOO0OO0OO0OO00O0O >=2 and O0OOO000O0OO000OO >=90 :#line:954
        OO00OOO00OO00OOO0 =int (5 *OOO0OO0OO0OO00O0O )#line:955
        O0OOO000O0OO000OO ,O0O0OOOOOOO0O0O00 ,O00OOOO000OOOO000 =O0OOO000O0OO000OO -OO00OOO00OO00OOO0 ,O0O0OOOOOOO0O0O00 -int (OO00OOO00OO00OOO0 /2 ),O00OOOO000OOOO000 -int (OO00OOO00OO00OOO0 /2 )#line:956
        print ("changed 5")#line:957
    OO000O0O0O00OO00O =len (O0O00OOOOOOO000OO )if len (O0O00OOOOOOO000OO )<len (O00OOOO0O0O00O00O )else len (O00OOOO0O0O00O00O )#line:959
    O00OOOO0O0O00O00O =[O0000OOO00O00O0O0 -(O00OOOO0O0O00O00O [0 ]-O0O00OOOOOOO000OO [0 ])for O0000OOO00O00O0O0 in O00OOOO0O0O00O00O ]#line:960
    OOOOOO0O000O0O0OO =[1 if O0O00OOOOOOO000OO [O0OOO00OOOO0O0000 ]-O00OOOO0O0O00O00O [O0OOO00OOOO0O0000 ]<2 else 0 for O0OOO00OOOO0O0000 in range (OO000O0O0O00OO00O )]#line:961
    return O0OOO000O0OO000OO ,O0O0OOOOOOO0O0O00 ,O00OOOO000OOOO000 #line:971
def del_middle_by_cqt (O0O0OO000000OOOOO ,OOOOOO0OO0OO0OO00 ,O000O0OO00000O00O ,O0O00O00OO0OO0O0O ):#line:973
    O00OOO0O000OO0O00 =[]#line:974
    OO0OO0O0O0O0OOO0O ,OOO00OOO000OOO0O0 =O000O0OO00000O00O .shape #line:975
    OOOOO0000O0OO0O0O =0 #line:976
    for OO0OOO00OO00OOOO0 in O0O0OO000000OOOOO :#line:977
        OOO0OO00O0OOOO0OO =OOOOOO0OO0OO0OO00 .get (OO0OOO00OO00OOOO0 )#line:978
        if not OOO0OO00O0OOOO0OO is None and OOO0OO00O0OOOO0OO >2.0 :#line:979
            O00OOO0O000OO0O00 .append (OO0OOO00OO00OOOO0 )#line:980
        else :#line:981
            OO00OOO000000000O =find_hightest_after (OO0OOO00OO00OOOO0 ,O0O00O00OO0OO0O0O )#line:982
            O000O00000OOOOOO0 =find_hightest_before (OO0OOO00OO00OOOO0 ,O0O00O00OO0OO0O0O )#line:983
            O0O00OO0O0O000O0O =O0O00O00OO0OO0O0O [OO00OOO000000000O ]-O0O00O00OO0OO0O0O [O000O00000OOOOOO0 ]#line:984
            if O0O00OO0O0O000O0O >2.0 :#line:986
                O00OOO0O000OO0O00 .append (OO0OOO00OO00OOOO0 )#line:987
            else :#line:988
                O00OOO00OOOO0O00O =check_middle_by_cqt (OO0OOO00OO00OOOO0 ,O000O0OO00000O00O )#line:1005
                if O00OOO00OOOO0O00O is False :#line:1006
                    O00OOO0O000OO0O00 .append (OO0OOO00OO00OOOO0 )#line:1007
        OOOOO0000O0OO0O0O +=1 #line:1008
    return O00OOO0O000OO0O00 #line:1009
def check_middle_by_cqt (OO00000O00O0O0O0O ,O0OOOOOO0O0O00000 ):#line:1010
    O0OO0O000OO000000 ,OOOO0OO00O0OO0000 =O0OOOOOO0O0O00000 .shape #line:1011
    OOO000O0O0O0OOOOO =np .max (O0OOOOOO0O0O00000 )#line:1012
    OO000O00000OOO00O =np .min (O0OOOOOO0O0O00000 )#line:1013
    OOOO00O00O000O00O =O0OOOOOO0O0O00000 [:,OO00000O00O0O0O0O ]#line:1014
    O00OO0OOO00OOOOO0 =False #line:1015
    for OO0OOO0O00OOO0O0O in range (O0OO0O000OO000000 -10 ,30 ,-1 ):#line:1016
        if np .min (OOOO00O00O000O00O [OO0OOO0O00OOO0O0O -1 :OO0OOO0O00OOO0O0O +1 ])==OOO000O0O0O0OOOOO :#line:1017
            if np .max (O0OOOOOO0O0O00000 [OO0OOO0O00OOO0O0O +1 ,OO00000O00O0O0O0O -3 :OO00000O00O0O0O0O +3 ])==OO000O00000OOO00O and np .min (O0OOOOOO0O0O00000 [OO0OOO0O00OOO0O0O ,OO00000O00O0O0O0O -3 :OO00000O00O0O0O0O +3 ])==OOO000O0O0O0OOOOO :#line:1018
                O00OO0OOO00OOOOO0 =True #line:1019
            break #line:1020
    return O00OO0OOO00OOOOO0 #line:1021
def check_noice (OO000O000O00OO000 ):#line:1023
    O00O0000OOO0O0OO0 ,OOOOO0000O0000OOO =OO000O000O00OO000 .shape #line:1024
    if OOOOO0000O0000OOO >10 :#line:1026
        OO000O000O00OO000 =OO000O000O00OO000 [:,0 :10 ]#line:1027
    OOO0000O0O0OO000O =[]#line:1029
    if OOOOO0000O0000OOO >0 :#line:1030
        O000O0O000O00O0OO =np .min (OO000O000O00OO000 )#line:1031
        for OOO0OO000O0O00O0O in range (10 ,O00O0000OOO0O0OO0 -10 ):#line:1032
            OO00OO0OOOO0OOOOO =OO000O000O00OO000 [OOO0OO000O0O00O0O ]#line:1033
            OO00OO0OOOO0OOOOO =[1 if OO00OO0OOOO0OOOOO [O0OO0O0O00O0O0O0O ]>O000O0O000O00O0OO else 0 for O0OO0O0O00O0O0O0O in range (len (OO00OO0OOOO0OOOOO ))]#line:1034
            OOOOOOOOOOOOOOOO0 =str (OO00OO0OOOO0OOOOO ).count ("1")#line:1035
            OO0OO0O00O00O0OO0 =str (OO00OO0OOOO0OOOOO ).count ("0")#line:1036
            if OOOOOOOOOOOOOOOO0 >OO0OO0O00O00O0OO0 :#line:1037
                OOO0000O0O0OO000O .append (1 )#line:1038
            else :#line:1039
                OOO0000O0O0OO000O .append (0 )#line:1040
        OOO00OO0OO000OOO0 =continueOne (OOO0000O0O0OO000O )#line:1041
        if OOO00OO0OO000OOO0 >8 :#line:1042
            return True ,OOO00OO0OO000OOO0 #line:1043
        else :#line:1044
            return False ,OOO00OO0OO000OOO0 #line:1045
def check_fisrt_frame_is_noice (OOO0000000OOOOO00 ,OO000OO00000O00OO ,OOOOOO00O0000O0O0 ,O000O00O00OOO0OOO ):#line:1046
   if len (OOO0000000OOOOO00 )>=2 :#line:1047
       OOO0OO000OO0O00O0 =O000O00O00OOO0OOO [:,OOO0000000OOOOO00 [0 ]:OOO0000000OOOOO00 [1 ]]#line:1048
       OOO0000O0OO00O0O0 ,OOOOOOOO0OO0OO00O =check_noice (OOO0OO000OO0O00O0 )#line:1049
       if OOO0000O0OO00O0O0 :#line:1050
           O0O0O0OO0O00OO0OO =1 #line:1051
           for O000000O00OOO0O00 in range (2 ,len (OOO0000000OOOOO00 )):#line:1052
               if OOO0000000OOOOO00 [O000000O00OOO0O00 ]>OOO0000000OOOOO00 [0 ]+OOOOOOOO0OO0OO00O +5 :#line:1053
                   O0O0O0OO0O00OO0OO =O000000O00OOO0O00 #line:1054
                   break #line:1055
           return OOO0000000OOOOO00 [O0O0O0OO0O00OO0OO :],OO000OO00000O00OO [O0O0O0OO0O00OO0OO :],OOOOOO00O0000O0O0 [O0O0O0OO0O00OO0OO :]#line:1056
       else :#line:1057
           return OOO0000000OOOOO00 ,OO000OO00000O00OO ,OOOOOO00O0000O0O0 #line:1058
   else :#line:1059
       OOO0OO000OO0O00O0 =O000O00O00OOO0OOO [:,OOO0000000OOOOO00 [0 ]:OOO0000000OOOOO00 [0 ]+10 ]#line:1060
       OOO0000O0OO00O0O0 ,OOOOOOOO0OO0OO00O =check_noice (OOO0OO000OO0O00O0 )#line:1061
       if OOO0000O0OO00O0O0 :#line:1062
           O0O0O0OO0O00OO0OO =1 #line:1063
           for O000000O00OOO0O00 in range (2 ,len (OOO0000000OOOOO00 )):#line:1064
               if OOO0000000OOOOO00 [O000000O00OOO0O00 ]>OOO0000000OOOOO00 [0 ]+OOOOOOOO0OO0OO00O +5 :#line:1065
                   O0O0O0OO0O00OO0OO =O000000O00OOO0O00 #line:1066
                   break #line:1067
           return OOO0000000OOOOO00 [O0O0O0OO0O00OO0OO :],OO000OO00000O00OO [O0O0O0OO0O00OO0OO :],OOOOOO00O0000O0O0 [O0O0O0OO0O00OO0OO :]#line:1068
       else :#line:1069
           return OOO0000000OOOOO00 ,OO000OO00000O00OO ,OOOOOO00O0000O0O0 #line:1070
def find_maybe_position_rhythm_code (O00O0OOOOO00000OO ,O00OOOOO0OO000000 ,OO00000OO00O00OOO ):#line:1072
    O0O0O0OO00O0OOO0O =0 #line:1073
    OO00000OO00O00OOO =OO00000OO00O00OOO .replace (";",',')#line:1074
    OO00000OO00O00OOO =OO00000OO00O00OOO .replace ("[",'')#line:1075
    OO00000OO00O00OOO =OO00000OO00O00OOO .replace ("]",'')#line:1076
    if OO00000OO00O00OOO .find ("(")>=0 :#line:1077
        O0OO0O00O0000O0O0 =[OO0OO000O000OO000 for OO0OO000O000OO000 in OO00000OO00O00OOO .split (',')]#line:1078
        for OOO0OO0O00O0OOO00 in range (len (O0OO0O00O0000O0O0 )):#line:1079
            if O0OO0O00O0000O0O0 [OOO0OO0O00O0OOO00 ].find ("(")>=0 :#line:1080
                O0O0O0OO00O0OOO0O =OOO0OO0O00O0OOO00 #line:1081
                break #line:1082
        OO00000OO00O00OOO =OO00000OO00O00OOO .replace ("(",'')#line:1083
        OO00000OO00O00OOO =OO00000OO00O00OOO .replace (")",'')#line:1084
        OO00000OO00O00OOO =OO00000OO00O00OOO .replace ("-",'')#line:1085
        OO00000OO00O00OOO =OO00000OO00O00OOO .replace ("--",'')#line:1086
    OO00000OO00O00OOO =[O000O0O00OO00OOOO for O000O0O00OO00OOOO in OO00000OO00O00OOO .split (',')]#line:1087
    OO00000OO00O00OOO =[int (OOOO000OO000OOO00 )for OOOO000OO000OOO00 in OO00000OO00O00OOO ]#line:1088
    if O0O0O0OO00O0OOO0O >0 :#line:1089
        OO00000OO00O00OOO [O0O0O0OO00O0OOO0O -1 ]+=OO00000OO00O00OOO [O0O0O0OO00O0OOO0O ]#line:1090
        del OO00000OO00O00OOO [O0O0O0OO00O0OOO0O ]#line:1091
    O0OOOOO00OOO0O000 =np .sum (OO00000OO00O00OOO )#line:1093
    OOO00OO0OOO00OO00 =[]#line:1094
    OOO00OO0OOO00OO00 .append (O00O0OOOOO00000OO )#line:1095
    for OO0O0O00000O000OO in OO00000OO00O00OOO :#line:1096
        O0O0OOOOOO0OOOOO0 =OOO00OO0OOO00OO00 [-1 ]+int (O00OOOOO0OO000000 /O0OOOOO00OOO0O000 *OO0O0O00000O000OO )#line:1097
        OOO00OO0OOO00OO00 .append (O0O0OOOOOO0OOOOO0 )#line:1098
    return OOO00OO0OOO00OO00 #line:1099
def modify_by_local_min_rms (O0OO0OOOOO00O000O ,O0OO00OO00O0O0OO0 ):#line:1100
    O0OOOO00OOOO00O00 =[]#line:1101
    for OO0O0OOOO0O0OOOOO in range (len (O0OO0OOOOO00O000O )):#line:1102
        OOOO0OO0OOO000O00 =O0OO0OOOOO00O000O [OO0O0OOOO0O0OOOOO ]#line:1103
        O00OOO00OO000O000 =get_local_min_before (OOOO0OO0OOO000O00 ,O0OO00OO00O0O0OO0 )#line:1104
        O0OOOO00OOOO00O00 .append (O00OOO00OO000O000 )#line:1105
    return O0OOOO00OOOO00O00 #line:1106
def get_local_min_before (O00OO0OO0OOO00OOO ,O0OOOOO00OO00O0O0 ):#line:1108
    OO0000OO0000OOOO0 =O00OO0OO0OOO00OOO #line:1109
    for OOO0OO000O000000O in range (10 ):#line:1110
        if O0OOOOO00OO00O0O0 [O00OO0OO0OOO00OOO -OOO0OO000O000000O -1 ]<O0OOOOO00OO00O0O0 [O00OO0OO0OOO00OOO -OOO0OO000O000000O ]:#line:1111
            OO0000OO0000OOOO0 =O00OO0OO0OOO00OOO -OOO0OO000O000000O -1 #line:1112
        else :#line:1113
            break #line:1114
    return OO0000OO0000OOOO0 #line:1115
def draw_plt (OOOO0OO0OOO0OO000 ,OO0000OOO0O00OO0O ,O00OOOO0O0O0O00O0 ):#line:1117
    O000OO00OOO00000O ,OO000000OO0OOOOO0 =load_and_trim (OOOO0OO0OOO0OO000 )#line:1118
    O000OO00OOO00000O ,OO000000OO0OOOOO0 =librosa .load (OOOO0OO0OOO0OO000 )#line:1119
    OO00O0000OOOOO0O0 =librosa .feature .rmse (y =O000OO00OOO00000O )[0 ]#line:1120
    OO00O0000OOOOO0O0 =[O0O00O0O0OO0O0000 /np .std (OO00O0000OOOOO0O0 )for O0O00O0O0OO0O0000 in OO00O0000OOOOO0O0 ]#line:1121
    O00OO0OO0O0OOO0OO =librosa .get_duration (filename =OOOO0OO0OOO0OO000 )#line:1122
    print ("time is {}".format (O00OO0OO0O0OOO0OO ))#line:1123
    OOO0O00O0O00OOOO0 =librosa .amplitude_to_db (librosa .cqt (O000OO00OOO00000O ,sr =16000 ),ref =np .max )#line:1124
    OOO00OOO0OOOOOOOO ,OO0OO00000O0O0O00 =OOO0O00O0O00OOOO0 .shape #line:1125
    print ("w.h is {},{}".format (OOO00OOO0OOOOOOOO ,OO0OO00000O0O0O00 ))#line:1126
    OO0O00OO0O000O000 ,OOO0OO000O000OO00 =onsets_base_frames_for_note (OOOO0OO0OOO0OO000 ,OO0000OOO0O00OO0O )#line:1128
    O00O0OOO000OOOOO0 =base_note (OOOO0OO0OOO0OO000 ,O00OOOO0O0O0O00O0 )#line:1129
    OOO0O00O0O00OOOO0 =np .where (OOO0O00O0O00OOOO0 >-22 ,np .max (OOO0O00O0O00OOOO0 ),np .min (OOO0O00O0O00OOOO0 ))#line:1130
    OO00000OO000OOO00 ,OO00O00OOO0000O0O ,OOOO0OO0OOO00OO00 ,OOOOOO0000OOO0000 =get_note_line_start_v2 (OOO0O00O0O00OOOO0 ,OO0000OOO0O00OO0O )#line:1133
    print ("frames_total ===== is {}".format (OO00000OO000OOO00 [-1 ]+OOOO0OO0OOO00OO00 [-1 ]-OO00000OO000OOO00 [0 ]))#line:1134
    print ("get_note_line_start_v2====01 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1137
    OO00000OO000OOO00 ,O00O00OOO0O00O00O ,OOOO0000OOOOOOOO0 =change_rms (OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OO00O0000OOOOO0O0 ,OOO0O00O0O00OOOO0 ,len (OO0O00OO0O000O000 ),O00OOOO0O0O0O00O0 )#line:1138
    print ("change_rms====02 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1139
    OO00000OO000OOO00 ,OOOO0OO0OOO00OO00 ,OOOOOO0000OOO0000 =check_fisrt_frame_is_noice (OO00000OO000OOO00 ,OOOO0OO0OOO00OO00 ,OOOOOO0000OOO0000 ,OOO0O00O0O00OOOO0 )#line:1140
    OO00000OO000OOO00 =modify_by_local_min_rms (OO00000OO000OOO00 ,OO00O0000OOOOO0O0 )#line:1141
    OO00000OO000OOO00 =del_middle_by_cqt (OO00000OO000OOO00 ,O00O00OOO0O00O00O ,OOO0O00O0O00OOOO0 ,OO00O0000OOOOO0O0 )#line:1142
    print ("del_middle_by_cqt====03 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1143
    OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 =get_note_lines (OOO0O00O0O00OOOO0 ,OO00000OO000OOO00 )#line:1144
    print ("get_note_lines====04 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1145
    OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 =del_false_same (O00O0OOO000OOOOO0 ,OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 ,O00O00OOO0O00O00O )#line:1146
    print ("del_false_same====05 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1147
    print ("before check_all_note_lines is {}".format (OOOOOO0000OOO0000 ))#line:1148
    OOOOOO0000OOO0000 =check_all_note_lines (OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOO0O00O0O00OOOO0 )#line:1149
    print ("after check_all_note_lines is {}".format (OOOOOO0000OOO0000 ))#line:1150
    OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 =del_end_range (OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 ,OO00O0000OOOOO0O0 ,OOO0OO000O000OO00 )#line:1151
    print ("del_end_range====06 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1152
    OO00000OO000OOO00 ,OOOO0OO0OOO00OO00 ,OOOOOO0000OOO0000 =merge_note_line_by_distance (OO00000OO000OOO00 ,OOOO0OO0OOO00OO00 ,OOOOOO0000OOO0000 ,OO0000OOO0O00OO0O ,OO00O00OOO0000O0O [-1 ]-OO00000OO000OOO00 [0 ])#line:1153
    print ("merge_note_line_by_distance====07 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1154
    OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOOO0OO0OOO00OO00 =get_note_lines (OOO0O00O0O00OOOO0 ,OO00000OO000OOO00 )#line:1155
    OOOOOO0000OOO0000 =check_all_note_lines (OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OOO0O00O0O00OOOO0 )#line:1156
    print ("get_note_lines====08 onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1157
    print ("0 onsets_frames is {},size is {}".format (OO00000OO000OOO00 ,len (OO00000OO000OOO00 )))#line:1159
    print ("0 end_result is {},size is {}".format (OO00O00OOO0000O0O ,len (OO00O00OOO0000O0O )))#line:1160
    print ("0 times is {},size is {}".format (OOOO0OO0OOO00OO00 ,len (OOOO0OO0OOO00OO00 )))#line:1161
    print ("0 note_lines is {},size is {}".format (OOOOOO0000OOO0000 ,len (OOOOOO0000OOO0000 )))#line:1162
    OOOOO000OO000000O =find_maybe_position_rhythm_code (OO00000OO000OOO00 [0 ],OO00O00OOO0000O0O [-1 ]-OO00000OO000OOO00 [0 ],OO0000OOO0O00OO0O )#line:1167
    OO0O00OO0O000O000 =OOOOO000OO000000O [:-1 ]#line:1168
    print ("maybe_onset_frames  is {}".format (OOOOO000OO000000O ))#line:1169
    print ("final onsets_frames is {}".format (OO00000OO000OOO00 ))#line:1170
    print ("final note_lines is {}".format (OOOOOO0000OOO0000 ))#line:1171
    print ("final times is {}".format (OOOO0OO0OOO00OO00 ))#line:1172
    OOO00OOOO0O00OO0O ,O0O0O0O00OO00O000 ,OOOOOOO0OOO00O0O0 =cal_score_v1 (OOOO0OO0OOO0OO000 ,OO00000OO000OOO00 ,OOOOOO0000OOO0000 ,OO0O00OO0O000O000 ,O00O0OOO000OOOOO0 ,OOOO0OO0OOO00OO00 ,OO0000OOO0O00OO0O )#line:1173
    print ("score, onset_score, note_scroe is {},{},{}".format (OOO00OOOO0O00OO0O ,O0O0O0O00OO00O000 ,OOOOOOO0OOO00O0O0 ))#line:1175
    O000O0O0OO00OOOOO ,O0000000OO0000O0O ,O000O0OOOO0OO0O0O =OOO00OOOO0O00OO0O ,O0O0O0O00OO00O000 ,OOOOOOO0OOO00O0O0 #line:1186
    plt .subplot (3 ,1 ,1 )#line:1187
    librosa .display .specshow (OOO0O00O0O00OOOO0 ,y_axis ='cqt_note',x_axis ='time')#line:1189
    print (np .max (O000OO00OOO00000O ))#line:1190
    OO0O0O000OO0O0OO0 =librosa .frames_to_time (OO00000OO000OOO00 ,sr =OO000000OO0OOOOO0 )#line:1191
    O0O000OOOO0OOOO0O =librosa .frames_to_time (OO00O00OOO0000O0O ,sr =OO000000OO0OOOOO0 )#line:1192
    plt .vlines (OO0O0O000OO0O0OO0 ,0 ,OO000000OO0OOOOO0 ,color ='y',linestyle ='dashed')#line:1194
    plt .subplot (3 ,1 ,2 )#line:1199
    OOOO0OO0OOO00OO00 =librosa .frames_to_time (np .arange (len (OO00O0000OOOOO0O0 )))#line:1200
    print ("base_frames is {},size is {}".format (OO0O00OO0O000O000 ,len (OO0O00OO0O000O000 )))#line:1201
    OO0O00OO0O000O000 =[O000OO0O000O0OOO0 -(OO0O00OO0O000O000 [0 ]-OO00000OO000OOO00 [0 ])for O000OO0O000O0OOO0 in OO0O00OO0O000O000 ]#line:1202
    OO000OOO00O0O0O0O =librosa .frames_to_time (OO0O00OO0O000O000 ,sr =OO000000OO0OOOOO0 )#line:1206
    plt .vlines (OO0O0O000OO0O0OO0 ,0 ,np .max (OO00O0000OOOOO0O0 ),color ='y',linestyle ='dashed')#line:1210
    plt .vlines (OO000OOO00O0O0O0O ,0 ,np .max (OO00O0000OOOOO0O0 ),color ='r',linestyle ='dashed')#line:1211
    O00O0O00O000O0OO0 =[OO00O0000OOOOO0O0 [O00000OO0OOO0OOOO ]for O00000OO0OOO0OOOO in OO00000OO000OOO00 ]#line:1212
    OO0OO0OO0O0OO000O =np .mean (O00O0O00O000O0OO0 )#line:1213
    plt .plot (OOOO0OO0OOO00OO00 ,OO00O0000OOOOO0O0 )#line:1214
    plt .xlim (0 ,np .max (OOOO0OO0OOO00OO00 ))#line:1215
    plt .axhline (OO0OO0OO0O0OO000O ,color ='r')#line:1216
    plt .subplot (3 ,1 ,3 )#line:1218
    OO00O0000OOOOO0O0 =np .diff (OO00O0000OOOOO0O0 ,2 )#line:1219
    OOOO0OO0OOO00OO00 =librosa .frames_to_time (np .arange (len (OO00O0000OOOOO0O0 )))#line:1222
    O00O0O00O000O0OO0 =[OO00O0000OOOOO0O0 [O000OOOOOO00OO00O ]for O000OOOOOO00OO00O in OO00000OO000OOO00 ]#line:1226
    OO0OO0OO0O0OO000O =np .mean (O00O0O00O000O0OO0 )#line:1227
    plt .plot (OOOO0OO0OOO00OO00 ,OO00O0000OOOOO0O0 )#line:1228
    plt .axhline (OO0OO0OO0O0OO000O ,color ='r')#line:1229
    plt .vlines (OO0O0O000OO0O0OO0 ,0 ,np .max (OO00O0000OOOOO0O0 ),color ='y',linestyle ='dashed')#line:1230
    plt .xlim (0 ,np .max (OOOO0OO0OOO00OO00 ))#line:1231
    return plt ,O000O0O0OO00OOOOO ,O0000000OO0000O0O ,O000O0OOOO0OO0O0O #line:1232
